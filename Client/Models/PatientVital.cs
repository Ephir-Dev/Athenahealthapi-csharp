// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AndriiKurdiumov.AuthenaHealth.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PatientVital
    {
        /// <summary>
        /// Initializes a new instance of the PatientVital class.
        /// </summary>
        public PatientVital()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PatientVital class.
        /// </summary>
        /// <param name="readings">List of vital attribute readings. One entry
        /// per attribute (so the temperature and where the temperature was
        /// taken are two different readings, tied together by the readingid
        /// </param>
        /// <param name="key">Key for this vital group. E.g., HEIGHT.</param>
        /// <param name="abbreviation">Short human-readable string for this
        /// vital group. E.g., Ht.</param>
        /// <param name="ordering">Configured order for this vital
        /// group</param>
        public PatientVital(IList<VitalAttributeReading> readings = default(IList<VitalAttributeReading>), string key = default(string), string abbreviation = default(string), int? ordering = default(int?))
        {
            Readings = readings;
            Key = key;
            Abbreviation = abbreviation;
            Ordering = ordering;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of vital attribute readings. One entry per
        /// attribute (so the temperature and where the temperature was taken
        /// are two different readings, tied together by the readingid
        ///
        /// </summary>
        [JsonProperty(PropertyName = "readings")]
        public IList<VitalAttributeReading> Readings { get; set; }

        /// <summary>
        /// Gets or sets key for this vital group. E.g., HEIGHT.
        /// </summary>
        [JsonProperty(PropertyName = "key")]
        public string Key { get; set; }

        /// <summary>
        /// Gets or sets short human-readable string for this vital group.
        /// E.g., Ht.
        /// </summary>
        [JsonProperty(PropertyName = "abbreviation")]
        public string Abbreviation { get; set; }

        /// <summary>
        /// Gets or sets configured order for this vital group
        /// </summary>
        [JsonProperty(PropertyName = "ordering")]
        public int? Ordering { get; set; }

    }
}
