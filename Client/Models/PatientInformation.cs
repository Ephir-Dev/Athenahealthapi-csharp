// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AndriiKurdiumov.AuthenaHealth.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PatientInformation
    {
        /// <summary>
        /// Initializes a new instance of the PatientInformation class.
        /// </summary>
        public PatientInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PatientInformation class.
        /// </summary>
        /// <param name="homeboundyn">If the patient is homebound, this is
        /// true.</param>
        /// <param name="assignedsexatbirth">Sex that this patient was assigned
        /// at birth.</param>
        /// <param name="altfirstname">Alternate first name that differs from
        /// legal name.</param>
        /// <param name="ethnicitycode">Ethnicity of the patient, using the
        /// 2.16.840.1.113883.5.50 codeset. See
        /// http://www.hl7.org/implement/standards/fhir/terminologies-v3.html
        /// Special case: use "declined" to indicate that the patient declined
        /// to answer.
        /// </param>
        /// <param name="industrycode">Industry of the patient, using the US
        /// Census industry code (code system 2.16.840.1.113883.6.310). "other"
        /// can be used as well.</param>
        /// <param name="language6392code">Language of the patient, using the
        /// ISO 639.2 code.
        /// (http://www.loc.gov/standards/iso639-2/php/code_list.php; "T" or
        /// terminology code) Special case: use "declined" to indicate that the
        /// patient declined to answer.
        /// </param>
        /// <param name="localpatientid">Given showlocalpatientid is true,
        /// comma separated local patient id will be returned, if patient id is
        /// enterprise id else given patient id will be displayed.</param>
        /// <param name="deceaseddate">If present, the date on which a patient
        /// died.</param>
        /// <param name="firstappointment">The first appointment for this
        /// patient, excluding cancelled or no-show appointments. (mm/dd/yyyy
        /// h24:mi)</param>
        /// <param name="primaryproviderid">The "primary" provider for this
        /// patient, if set.</param>
        /// <param name="genderidentityother">If a patient does not identify
        /// with any prescribed gender identity choice, this field stores the
        /// patient-provided description of gender identity.</param>
        /// <param name="portalstatus">Portal status details. See
        /// /patients/{patientid}/portalstatus for details.</param>
        /// <param name="preferredpronouns">Pronoun this patient uses.</param>
        /// <param name="lastappointment">The last appointment for this patient
        /// (before today), excluding cancelled or no-show appointments.
        /// (mm/dd/yyyy h24:mi)</param>
        /// <param name="donotcallyn">Warning! This patient will not receive
        /// any communication from the practice if this field is set to
        /// true.</param>
        /// <param name="primarydepartmentid">The patient's "current"
        /// department. This field is not always set by the practice.</param>
        /// <param name="status">The "status" of the patient, one of active,
        /// inactive, prospective, or deleted.</param>
        /// <param name="balances">List of balances owed by the patient, broken
        /// down by provider (financial) group.</param>
        /// <param name="lastemail">The last email for this patient on
        /// file.</param>
        /// <param name="racecode">The patient race hierarchical code as
        /// specified in Race &amp; Ethnicity - CDC *
        /// (2.16.840.1.113883.1.11.14914)</param>
        /// <param name="sexualorientation">Sexual orientation of this
        /// patient.</param>
        /// <param name="genderidentity">Gender with which this patient
        /// identifies.</param>
        /// <param name="emailexistsyn">True if email exists. False if patient
        /// declined. Null if status is unknown.</param>
        /// <param name="occupationcode">Occupation of the patient, using the
        /// US Census occupation code (code system 2.16.840.1.113883.6.240).
        /// "other" can be used as well.</param>
        /// <param name="race">The patient race, using the
        /// 2.16.840.1.113883.5.104 codeset. See
        /// http://www.hl7.org/implement/standards/fhir/terminologies-v3.html
        /// Special case: use "declined" to indicate that the patient declined
        /// to answer. Multiple values or a tab-seperated list of codes is
        /// acceptable for multiple races for input. The first race will be
        /// considered "primary". Note: you must update all values at once if
        /// you update any.
        /// </param>
        /// <param name="sexualorientationother">If a patient does not identify
        /// with any prescribed sexual orientation choice, this field stores
        /// the patient-provided description of sexual orientation.</param>
        /// <param name="patientid">Please remember to never disclose this ID
        /// to patients since it may result in inadvertant disclosure that a
        /// patient exists in a practice already.</param>
        /// <param name="firstname">Patient's first name</param>
        /// <param name="middlename">Patient's middle name</param>
        /// <param name="lastname">Patient's last name</param>
        /// <param name="suffix">Patient's name suffix</param>
        /// <param name="preferredname">The patient's preferred name (i.e.
        /// nickname).</param>
        /// <param name="address1">Patient's address - 1st line</param>
        /// <param name="address2">Patient's address - 2nd line</param>
        /// <param name="city">Patient's city</param>
        /// <param name="state">Patient's state (2 letter abbreviation)</param>
        /// <param name="zip">Patient's zip. Matching occurs on first 5
        /// characters.</param>
        /// <param name="countrycode">Patient's country code</param>
        /// <param name="countrycode3166">Patient's country code (ISO
        /// 3166-1)</param>
        /// <param name="homephone">The patient's home phone number. Invalid
        /// numbers in a GET/PUT will be ignored. Patient phone numbers and
        /// other data may change, and one phone number may be associated with
        /// multiple patients. You are responsible for taking additional steps
        /// to verify patient identity and for using this data in accordance
        /// with applicable law, including HIPAA. Invalid numbers in a POST
        /// will be ignored, possibly resulting in an error.
        /// </param>
        /// <param name="mobilephone">The patient's mobile phone number. On
        /// input, 'declined' can be used to indicate no number.
        /// (Alternatively, hasmobile can also be set to false. "declined"
        /// simply does this for you.) Invalid numbers in a GET/PUT will be
        /// ignored. Patient phone numbers and other data may change, and one
        /// phone number may be associated with multiple patients. You are
        /// responsible for taking additional steps to verify patient identity
        /// and for using this data in accordance with applicable law,
        /// including HIPAA. Invalid numbers in a POST will be ignored,
        /// possibly resulting in an error.
        /// </param>
        /// <param name="hasmobileyn">Set to false if a client has declined a
        /// phone number.</param>
        /// <param name="workphone">The patient's work phone number. Generally
        /// not used to contact a patient. Invalid numbers in a GET/PUT will be
        /// ignored. Patient phone numbers and other data may change, and one
        /// phone number may be associated with multiple patients. You are
        /// responsible for taking additional steps to verify patient identity
        /// and for using this data in accordance with applicable law,
        /// including HIPAA. Invalid numbers in a POST will be ignored,
        /// possibly resulting in an error.
        /// </param>
        /// <param name="email">Patient's email address. 'declined' can be used
        /// to indicate just that.</param>
        /// <param name="ssn">The patient's SSN</param>
        /// <param name="racename">The patient's primary race name. See race
        /// for more complete details.</param>
        /// <param name="sex">Patient's sex (M/F)</param>
        /// <param name="dob">Patient's DOB (mm/dd/yyyy)</param>
        /// <param name="maritalstatus">Marital Status (D=Divorced, M=Married,
        /// S=Single, U=Unknown, W=Widowed, X=Separated, P=Partner)</param>
        /// <param name="contactpreference">The MU-required field for
        /// "preferred contact method". This is not used by any automated
        /// systems.</param>
        /// <param name="contactname">The name of the (emergency) person to
        /// contact about the patient. The contactname, contactrelationship,
        /// contacthomephone, and contactmobilephone fields are all related to
        /// the emergency contact for the patient. They are NOT related to the
        /// contractpreference_* fields.
        /// </param>
        /// <param name="contactrelationship">Emergency contact relationship
        /// (one of SPOUSE, PARENT, CHILD, SIBLING, FRIEND, COUSIN, GUARDIAN,
        /// OTHER)</param>
        /// <param name="contacthomephone">Emergency contact home phone.
        /// Invalid numbers in a GET/PUT will be ignored. Patient phone numbers
        /// and other data may change, and one phone number may be associated
        /// with multiple patients. You are responsible for taking additional
        /// steps to verify patient identity and for using this data in
        /// accordance with applicable law, including HIPAA. Invalid numbers in
        /// a POST will be ignored, possibly resulting in an error.
        /// </param>
        /// <param name="contactmobilephone">Emergency contact mobile phone.
        /// Invalid numbers in a GET/PUT will be ignored. Patient phone numbers
        /// and other data may change, and one phone number may be associated
        /// with multiple patients. You are responsible for taking additional
        /// steps to verify patient identity and for using this data in
        /// accordance with applicable law, including HIPAA. Invalid numbers in
        /// a POST will be ignored, possibly resulting in an error.
        /// </param>
        /// <param name="nextkinname">The full name of the next of kin.</param>
        /// <param name="nextkinrelationship">The next of kin relationship (one
        /// of SPOUSE, PARENT, CHILD, SIBLING, FRIEND, COUSIN, GUARDIAN,
        /// OTHER)</param>
        /// <param name="nextkinphone">The next of kin phone number. Invalid
        /// numbers in a GET/PUT will be ignored. Patient phone numbers and
        /// other data may change, and one phone number may be associated with
        /// multiple patients. You are responsible for taking additional steps
        /// to verify patient identity and for using this data in accordance
        /// with applicable law, including HIPAA. Invalid numbers in a POST
        /// will be ignored, possibly resulting in an error.
        /// </param>
        /// <param name="guardianfirstname">The first name of the patient's
        /// guardian.</param>
        /// <param name="guardianmiddlename">The middle name of the patient's
        /// guardian.</param>
        /// <param name="guardianlastname">The last name of the patient's
        /// guardian.</param>
        /// <param name="guardiansuffix">The suffix of the patient's
        /// guardian.</param>
        /// <param name="guarantorfirstname">Guarantor's first name</param>
        /// <param name="guarantormiddlename">Guarantor's middle name</param>
        /// <param name="guarantorlastname">Guarantor's last name</param>
        /// <param name="guarantorsuffix">Guarantor's name suffix</param>
        /// <param name="guarantoraddress1">Guarantor's address</param>
        /// <param name="guarantoraddress2">Guarantor's address - line
        /// 2</param>
        /// <param name="guarantorcity">Guarantor's city</param>
        /// <param name="guarantorstate">Guarantor's state (2 letter
        /// abbreviation)</param>
        /// <param name="guarantorzip">Guarantor's zip</param>
        /// <param name="guarantorcountrycode">Guarantor's country code</param>
        /// <param name="guarantorcountrycode3166">Guarantor's country code
        /// (ISO 3166-1)</param>
        /// <param name="guarantordob">Guarantor's DOB (mm/dd/yyyy)</param>
        /// <param name="guarantorssn">Guarantor's SSN</param>
        /// <param name="guarantoremail">Guarantor's email address</param>
        /// <param name="guarantorphone">Guarantor's phone number. Invalid
        /// numbers in a GET/PUT will be ignored. Patient phone numbers and
        /// other data may change, and one phone number may be associated with
        /// multiple patients. You are responsible for taking additional steps
        /// to verify patient identity and for using this data in accordance
        /// with applicable law, including HIPAA. Invalid numbers in a POST
        /// will be ignored, possibly resulting in an error.
        /// </param>
        /// <param name="guarantorrelationshiptopatient">The guarantor's
        /// relationship to the patient</param>
        /// <param name="guarantoraddresssameaspatient">The address of the
        /// guarantor is the same as the patient.</param>
        /// <param name="registrationdate">Date the patient was
        /// registered.</param>
        /// <param name="departmentid">Primary (registration) department
        /// ID.</param>
        /// <param name="portaltermsonfile">Flag determining whether or not the
        /// patient has accepted the Terms and Conditions for the patient
        /// portal.</param>
        /// <param name="portalsignatureonfile">This flag is set if the
        /// patient's signature is on file</param>
        /// <param name="privacyinformationverified">This flag is set if the
        /// patient's privacy information has been verified. Privacy
        /// information returns True if all of the items referenced in GET
        /// /patients/{patientid}/privacyinformationverified are true. Privacy
        /// information returns false if any of the items referenced in the GET
        /// /patients/{patientid}/privacyinformationverified API are false or
        /// expired.
        /// </param>
        /// <param name="medicationhistoryconsentverified">Medication history
        /// consent status. If a practice doesn't have RXHub or Surescripts
        /// enabled, this will be null</param>
        /// <param name="maritalstatusname">The long version of the marital
        /// status.</param>
        /// <param name="employerid">The patient's employer's ID (from
        /// /employers call)</param>
        /// <param name="employerphone">The patient's employer's phone number.
        /// Normally, this is set by setting employerid. However, setting this
        /// value can be used to override this on an individual patient.
        /// Invalid numbers in a GET/PUT will be ignored. Patient phone numbers
        /// and other data may change, and one phone number may be associated
        /// with multiple patients. You are responsible for taking additional
        /// steps to verify patient identity and for using this data in
        /// accordance with applicable law, including HIPAA. Invalid numbers in
        /// a POST will be ignored, possibly resulting in an error.
        /// </param>
        /// <param name="guarantoremployerid">The guaranror's employer's ID
        /// (from /employers call)</param>
        /// <param name="employername">The patient's employer's name.</param>
        /// <param name="employeraddress">The patient's employer's
        /// address.</param>
        /// <param name="employercity">The patient's employer's city.</param>
        /// <param name="portalaccessgiven">This flag is set if the patient has
        /// been given access to the portal. This may be set by the API user if
        /// a patient has been given access to the portal "by providing a
        /// preprinted brochure or flyer showing the URL where patients can
        /// access their Patient Care Summaries." The practiceinfo endpoint can
        /// provide the portal URL. While technically allowed, it would be very
        /// unusual to set this to false via the API.
        /// </param>
        public PatientInformation(bool? homeboundyn = default(bool?), string assignedsexatbirth = default(string), string altfirstname = default(string), string ethnicitycode = default(string), int? industrycode = default(int?), string language6392code = default(string), string localpatientid = default(string), string deceaseddate = default(string), string firstappointment = default(string), int? primaryproviderid = default(int?), string genderidentityother = default(string), IList<PatientPortalStatus> portalstatus = default(IList<PatientPortalStatus>), string preferredpronouns = default(string), string lastappointment = default(string), bool? donotcallyn = default(bool?), int? primarydepartmentid = default(int?), string status = default(string), IList<PatientBalanceInformation> balances = default(IList<PatientBalanceInformation>), string lastemail = default(string), string racecode = default(string), string sexualorientation = default(string), string genderidentity = default(string), bool? emailexistsyn = default(bool?), int? occupationcode = default(int?), IList<string> race = default(IList<string>), string sexualorientationother = default(string), int? patientid = default(int?), string firstname = default(string), string middlename = default(string), string lastname = default(string), string suffix = default(string), string preferredname = default(string), string address1 = default(string), string address2 = default(string), string city = default(string), string state = default(string), string zip = default(string), string countrycode = default(string), string countrycode3166 = default(string), string homephone = default(string), string mobilephone = default(string), bool? hasmobileyn = default(bool?), string workphone = default(string), string email = default(string), string ssn = default(string), string racename = default(string), string sex = default(string), string dob = default(string), string maritalstatus = default(string), string contactpreference = default(string), string contactname = default(string), string contactrelationship = default(string), string contacthomephone = default(string), string contactmobilephone = default(string), string nextkinname = default(string), string nextkinrelationship = default(string), string nextkinphone = default(string), string guardianfirstname = default(string), string guardianmiddlename = default(string), string guardianlastname = default(string), string guardiansuffix = default(string), string guarantorfirstname = default(string), string guarantormiddlename = default(string), string guarantorlastname = default(string), string guarantorsuffix = default(string), string guarantoraddress1 = default(string), string guarantoraddress2 = default(string), string guarantorcity = default(string), string guarantorstate = default(string), string guarantorzip = default(string), string guarantorcountrycode = default(string), string guarantorcountrycode3166 = default(string), string guarantordob = default(string), string guarantorssn = default(string), string guarantoremail = default(string), string guarantorphone = default(string), int? guarantorrelationshiptopatient = default(int?), bool? guarantoraddresssameaspatient = default(bool?), string registrationdate = default(string), int? departmentid = default(int?), bool? portaltermsonfile = default(bool?), bool? portalsignatureonfile = default(bool?), bool? privacyinformationverified = default(bool?), bool? medicationhistoryconsentverified = default(bool?), string maritalstatusname = default(string), int? employerid = default(int?), string employerphone = default(string), int? guarantoremployerid = default(int?), string employername = default(string), string employeraddress = default(string), string employercity = default(string), bool? portalaccessgiven = default(bool?))
        {
            Homeboundyn = homeboundyn;
            Assignedsexatbirth = assignedsexatbirth;
            Altfirstname = altfirstname;
            Ethnicitycode = ethnicitycode;
            Industrycode = industrycode;
            Language6392code = language6392code;
            Localpatientid = localpatientid;
            Deceaseddate = deceaseddate;
            Firstappointment = firstappointment;
            Primaryproviderid = primaryproviderid;
            Genderidentityother = genderidentityother;
            Portalstatus = portalstatus;
            Preferredpronouns = preferredpronouns;
            Lastappointment = lastappointment;
            Donotcallyn = donotcallyn;
            Primarydepartmentid = primarydepartmentid;
            Status = status;
            Balances = balances;
            Lastemail = lastemail;
            Racecode = racecode;
            Sexualorientation = sexualorientation;
            Genderidentity = genderidentity;
            Emailexistsyn = emailexistsyn;
            Occupationcode = occupationcode;
            Race = race;
            Sexualorientationother = sexualorientationother;
            Patientid = patientid;
            Firstname = firstname;
            Middlename = middlename;
            Lastname = lastname;
            Suffix = suffix;
            Preferredname = preferredname;
            Address1 = address1;
            Address2 = address2;
            City = city;
            State = state;
            Zip = zip;
            Countrycode = countrycode;
            Countrycode3166 = countrycode3166;
            Homephone = homephone;
            Mobilephone = mobilephone;
            Hasmobileyn = hasmobileyn;
            Workphone = workphone;
            Email = email;
            Ssn = ssn;
            Racename = racename;
            Sex = sex;
            Dob = dob;
            Maritalstatus = maritalstatus;
            Contactpreference = contactpreference;
            Contactname = contactname;
            Contactrelationship = contactrelationship;
            Contacthomephone = contacthomephone;
            Contactmobilephone = contactmobilephone;
            Nextkinname = nextkinname;
            Nextkinrelationship = nextkinrelationship;
            Nextkinphone = nextkinphone;
            Guardianfirstname = guardianfirstname;
            Guardianmiddlename = guardianmiddlename;
            Guardianlastname = guardianlastname;
            Guardiansuffix = guardiansuffix;
            Guarantorfirstname = guarantorfirstname;
            Guarantormiddlename = guarantormiddlename;
            Guarantorlastname = guarantorlastname;
            Guarantorsuffix = guarantorsuffix;
            Guarantoraddress1 = guarantoraddress1;
            Guarantoraddress2 = guarantoraddress2;
            Guarantorcity = guarantorcity;
            Guarantorstate = guarantorstate;
            Guarantorzip = guarantorzip;
            Guarantorcountrycode = guarantorcountrycode;
            Guarantorcountrycode3166 = guarantorcountrycode3166;
            Guarantordob = guarantordob;
            Guarantorssn = guarantorssn;
            Guarantoremail = guarantoremail;
            Guarantorphone = guarantorphone;
            Guarantorrelationshiptopatient = guarantorrelationshiptopatient;
            Guarantoraddresssameaspatient = guarantoraddresssameaspatient;
            Registrationdate = registrationdate;
            Departmentid = departmentid;
            Portaltermsonfile = portaltermsonfile;
            Portalsignatureonfile = portalsignatureonfile;
            Privacyinformationverified = privacyinformationverified;
            Medicationhistoryconsentverified = medicationhistoryconsentverified;
            Maritalstatusname = maritalstatusname;
            Employerid = employerid;
            Employerphone = employerphone;
            Guarantoremployerid = guarantoremployerid;
            Employername = employername;
            Employeraddress = employeraddress;
            Employercity = employercity;
            Portalaccessgiven = portalaccessgiven;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets if the patient is homebound, this is true.
        /// </summary>
        [JsonProperty(PropertyName = "homeboundyn")]
        public bool? Homeboundyn { get; set; }

        /// <summary>
        /// Gets or sets sex that this patient was assigned at birth.
        /// </summary>
        [JsonProperty(PropertyName = "assignedsexatbirth")]
        public string Assignedsexatbirth { get; set; }

        /// <summary>
        /// Gets or sets alternate first name that differs from legal name.
        /// </summary>
        [JsonProperty(PropertyName = "altfirstname")]
        public string Altfirstname { get; set; }

        /// <summary>
        /// Gets or sets ethnicity of the patient, using the
        /// 2.16.840.1.113883.5.50 codeset. See
        /// http://www.hl7.org/implement/standards/fhir/terminologies-v3.html
        /// Special case: use "declined" to indicate that the patient declined
        /// to answer.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "ethnicitycode")]
        public string Ethnicitycode { get; set; }

        /// <summary>
        /// Gets or sets industry of the patient, using the US Census industry
        /// code (code system 2.16.840.1.113883.6.310). "other" can be used as
        /// well.
        /// </summary>
        [JsonProperty(PropertyName = "industrycode")]
        public int? Industrycode { get; set; }

        /// <summary>
        /// Gets or sets language of the patient, using the ISO 639.2 code.
        /// (http://www.loc.gov/standards/iso639-2/php/code_list.php; "T" or
        /// terminology code) Special case: use "declined" to indicate that the
        /// patient declined to answer.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "language6392code")]
        public string Language6392code { get; set; }

        /// <summary>
        /// Gets or sets given showlocalpatientid is true, comma separated
        /// local patient id will be returned, if patient id is enterprise id
        /// else given patient id will be displayed.
        /// </summary>
        [JsonProperty(PropertyName = "localpatientid")]
        public string Localpatientid { get; set; }

        /// <summary>
        /// Gets or sets if present, the date on which a patient died.
        /// </summary>
        [JsonProperty(PropertyName = "deceaseddate")]
        public string Deceaseddate { get; set; }

        /// <summary>
        /// Gets or sets the first appointment for this patient, excluding
        /// cancelled or no-show appointments. (mm/dd/yyyy h24:mi)
        /// </summary>
        [JsonProperty(PropertyName = "firstappointment")]
        public string Firstappointment { get; set; }

        /// <summary>
        /// Gets or sets the "primary" provider for this patient, if set.
        /// </summary>
        [JsonProperty(PropertyName = "primaryproviderid")]
        public int? Primaryproviderid { get; set; }

        /// <summary>
        /// Gets or sets if a patient does not identify with any prescribed
        /// gender identity choice, this field stores the patient-provided
        /// description of gender identity.
        /// </summary>
        [JsonProperty(PropertyName = "genderidentityother")]
        public string Genderidentityother { get; set; }

        /// <summary>
        /// Gets or sets portal status details. See
        /// /patients/{patientid}/portalstatus for details.
        /// </summary>
        [JsonProperty(PropertyName = "portalstatus")]
        public IList<PatientPortalStatus> Portalstatus { get; set; }

        /// <summary>
        /// Gets or sets pronoun this patient uses.
        /// </summary>
        [JsonProperty(PropertyName = "preferredpronouns")]
        public string Preferredpronouns { get; set; }

        /// <summary>
        /// Gets or sets the last appointment for this patient (before today),
        /// excluding cancelled or no-show appointments. (mm/dd/yyyy h24:mi)
        /// </summary>
        [JsonProperty(PropertyName = "lastappointment")]
        public string Lastappointment { get; set; }

        /// <summary>
        /// Gets or sets warning! This patient will not receive any
        /// communication from the practice if this field is set to true.
        /// </summary>
        [JsonProperty(PropertyName = "donotcallyn")]
        public bool? Donotcallyn { get; set; }

        /// <summary>
        /// Gets or sets the patient's "current" department. This field is not
        /// always set by the practice.
        /// </summary>
        [JsonProperty(PropertyName = "primarydepartmentid")]
        public int? Primarydepartmentid { get; set; }

        /// <summary>
        /// Gets or sets the "status" of the patient, one of active, inactive,
        /// prospective, or deleted.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets list of balances owed by the patient, broken down by
        /// provider (financial) group.
        /// </summary>
        [JsonProperty(PropertyName = "balances")]
        public IList<PatientBalanceInformation> Balances { get; set; }

        /// <summary>
        /// Gets or sets the last email for this patient on file.
        /// </summary>
        [JsonProperty(PropertyName = "lastemail")]
        public string Lastemail { get; set; }

        /// <summary>
        /// Gets or sets the patient race hierarchical code as specified in
        /// Race &amp;amp; Ethnicity - CDC * (2.16.840.1.113883.1.11.14914)
        /// </summary>
        [JsonProperty(PropertyName = "racecode")]
        public string Racecode { get; set; }

        /// <summary>
        /// Gets or sets sexual orientation of this patient.
        /// </summary>
        [JsonProperty(PropertyName = "sexualorientation")]
        public string Sexualorientation { get; set; }

        /// <summary>
        /// Gets or sets gender with which this patient identifies.
        /// </summary>
        [JsonProperty(PropertyName = "genderidentity")]
        public string Genderidentity { get; set; }

        /// <summary>
        /// Gets or sets true if email exists. False if patient declined. Null
        /// if status is unknown.
        /// </summary>
        [JsonProperty(PropertyName = "emailexistsyn")]
        public bool? Emailexistsyn { get; set; }

        /// <summary>
        /// Gets or sets occupation of the patient, using the US Census
        /// occupation code (code system 2.16.840.1.113883.6.240). "other" can
        /// be used as well.
        /// </summary>
        [JsonProperty(PropertyName = "occupationcode")]
        public int? Occupationcode { get; set; }

        /// <summary>
        /// Gets or sets the patient race, using the 2.16.840.1.113883.5.104
        /// codeset. See
        /// http://www.hl7.org/implement/standards/fhir/terminologies-v3.html
        /// Special case: use "declined" to indicate that the patient declined
        /// to answer. Multiple values or a tab-seperated list of codes is
        /// acceptable for multiple races for input. The first race will be
        /// considered "primary". Note: you must update all values at once if
        /// you update any.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "race")]
        public IList<string> Race { get; set; }

        /// <summary>
        /// Gets or sets if a patient does not identify with any prescribed
        /// sexual orientation choice, this field stores the patient-provided
        /// description of sexual orientation.
        /// </summary>
        [JsonProperty(PropertyName = "sexualorientationother")]
        public string Sexualorientationother { get; set; }

        /// <summary>
        /// Gets or sets please remember to never disclose this ID to patients
        /// since it may result in inadvertant disclosure that a patient exists
        /// in a practice already.
        /// </summary>
        [JsonProperty(PropertyName = "patientid")]
        public int? Patientid { get; set; }

        /// <summary>
        /// Gets or sets patient's first name
        /// </summary>
        [JsonProperty(PropertyName = "firstname")]
        public string Firstname { get; set; }

        /// <summary>
        /// Gets or sets patient's middle name
        /// </summary>
        [JsonProperty(PropertyName = "middlename")]
        public string Middlename { get; set; }

        /// <summary>
        /// Gets or sets patient's last name
        /// </summary>
        [JsonProperty(PropertyName = "lastname")]
        public string Lastname { get; set; }

        /// <summary>
        /// Gets or sets patient's name suffix
        /// </summary>
        [JsonProperty(PropertyName = "suffix")]
        public string Suffix { get; set; }

        /// <summary>
        /// Gets or sets the patient's preferred name (i.e. nickname).
        /// </summary>
        [JsonProperty(PropertyName = "preferredname")]
        public string Preferredname { get; set; }

        /// <summary>
        /// Gets or sets patient's address - 1st line
        /// </summary>
        [JsonProperty(PropertyName = "address1")]
        public string Address1 { get; set; }

        /// <summary>
        /// Gets or sets patient's address - 2nd line
        /// </summary>
        [JsonProperty(PropertyName = "address2")]
        public string Address2 { get; set; }

        /// <summary>
        /// Gets or sets patient's city
        /// </summary>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }

        /// <summary>
        /// Gets or sets patient's state (2 letter abbreviation)
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets patient's zip. Matching occurs on first 5 characters.
        /// </summary>
        [JsonProperty(PropertyName = "zip")]
        public string Zip { get; set; }

        /// <summary>
        /// Gets or sets patient's country code
        /// </summary>
        [JsonProperty(PropertyName = "countrycode")]
        public string Countrycode { get; set; }

        /// <summary>
        /// Gets or sets patient's country code (ISO 3166-1)
        /// </summary>
        [JsonProperty(PropertyName = "countrycode3166")]
        public string Countrycode3166 { get; set; }

        /// <summary>
        /// Gets or sets the patient's home phone number. Invalid numbers in a
        /// GET/PUT will be ignored. Patient phone numbers and other data may
        /// change, and one phone number may be associated with multiple
        /// patients. You are responsible for taking additional steps to verify
        /// patient identity and for using this data in accordance with
        /// applicable law, including HIPAA. Invalid numbers in a POST will be
        /// ignored, possibly resulting in an error.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "homephone")]
        public string Homephone { get; set; }

        /// <summary>
        /// Gets or sets the patient's mobile phone number. On input,
        /// 'declined' can be used to indicate no number.  (Alternatively,
        /// hasmobile can also be set to false. "declined" simply does this for
        /// you.) Invalid numbers in a GET/PUT will be ignored. Patient phone
        /// numbers and other data may change, and one phone number may be
        /// associated with multiple patients. You are responsible for taking
        /// additional steps to verify patient identity and for using this data
        /// in accordance with applicable law, including HIPAA. Invalid numbers
        /// in a POST will be ignored, possibly resulting in an error.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "mobilephone")]
        public string Mobilephone { get; set; }

        /// <summary>
        /// Gets or sets set to false if a client has declined a phone number.
        /// </summary>
        [JsonProperty(PropertyName = "hasmobileyn")]
        public bool? Hasmobileyn { get; set; }

        /// <summary>
        /// Gets or sets the patient's work phone number. Generally not used to
        /// contact a patient. Invalid numbers in a GET/PUT will be ignored.
        /// Patient phone numbers and other data may change, and one phone
        /// number may be associated with multiple patients. You are
        /// responsible for taking additional steps to verify patient identity
        /// and for using this data in accordance with applicable law,
        /// including HIPAA. Invalid numbers in a POST will be ignored,
        /// possibly resulting in an error.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "workphone")]
        public string Workphone { get; set; }

        /// <summary>
        /// Gets or sets patient's email address. 'declined' can be used to
        /// indicate just that.
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets the patient's SSN
        /// </summary>
        [JsonProperty(PropertyName = "ssn")]
        public string Ssn { get; set; }

        /// <summary>
        /// Gets or sets the patient's primary race name. See race for more
        /// complete details.
        /// </summary>
        [JsonProperty(PropertyName = "racename")]
        public string Racename { get; set; }

        /// <summary>
        /// Gets or sets patient's sex (M/F)
        /// </summary>
        [JsonProperty(PropertyName = "sex")]
        public string Sex { get; set; }

        /// <summary>
        /// Gets or sets patient's DOB (mm/dd/yyyy)
        /// </summary>
        [JsonProperty(PropertyName = "dob")]
        public string Dob { get; set; }

        /// <summary>
        /// Gets or sets marital Status (D=Divorced, M=Married, S=Single,
        /// U=Unknown, W=Widowed, X=Separated, P=Partner)
        /// </summary>
        [JsonProperty(PropertyName = "maritalstatus")]
        public string Maritalstatus { get; set; }

        /// <summary>
        /// Gets or sets the MU-required field for "preferred contact method".
        /// This is not used by any automated systems.
        /// </summary>
        [JsonProperty(PropertyName = "contactpreference")]
        public string Contactpreference { get; set; }

        /// <summary>
        /// Gets or sets the name of the (emergency) person to contact about
        /// the patient. The contactname, contactrelationship,
        /// contacthomephone, and contactmobilephone fields are all related to
        /// the emergency contact for the patient. They are NOT related to the
        /// contractpreference_* fields.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "contactname")]
        public string Contactname { get; set; }

        /// <summary>
        /// Gets or sets emergency contact relationship (one of SPOUSE, PARENT,
        /// CHILD, SIBLING, FRIEND, COUSIN, GUARDIAN, OTHER)
        /// </summary>
        [JsonProperty(PropertyName = "contactrelationship")]
        public string Contactrelationship { get; set; }

        /// <summary>
        /// Gets or sets emergency contact home phone. Invalid numbers in a
        /// GET/PUT will be ignored. Patient phone numbers and other data may
        /// change, and one phone number may be associated with multiple
        /// patients. You are responsible for taking additional steps to verify
        /// patient identity and for using this data in accordance with
        /// applicable law, including HIPAA. Invalid numbers in a POST will be
        /// ignored, possibly resulting in an error.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "contacthomephone")]
        public string Contacthomephone { get; set; }

        /// <summary>
        /// Gets or sets emergency contact mobile phone. Invalid numbers in a
        /// GET/PUT will be ignored. Patient phone numbers and other data may
        /// change, and one phone number may be associated with multiple
        /// patients. You are responsible for taking additional steps to verify
        /// patient identity and for using this data in accordance with
        /// applicable law, including HIPAA. Invalid numbers in a POST will be
        /// ignored, possibly resulting in an error.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "contactmobilephone")]
        public string Contactmobilephone { get; set; }

        /// <summary>
        /// Gets or sets the full name of the next of kin.
        /// </summary>
        [JsonProperty(PropertyName = "nextkinname")]
        public string Nextkinname { get; set; }

        /// <summary>
        /// Gets or sets the next of kin relationship (one of SPOUSE, PARENT,
        /// CHILD, SIBLING, FRIEND, COUSIN, GUARDIAN, OTHER)
        /// </summary>
        [JsonProperty(PropertyName = "nextkinrelationship")]
        public string Nextkinrelationship { get; set; }

        /// <summary>
        /// Gets or sets the next of kin phone number. Invalid numbers in a
        /// GET/PUT will be ignored. Patient phone numbers and other data may
        /// change, and one phone number may be associated with multiple
        /// patients. You are responsible for taking additional steps to verify
        /// patient identity and for using this data in accordance with
        /// applicable law, including HIPAA. Invalid numbers in a POST will be
        /// ignored, possibly resulting in an error.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "nextkinphone")]
        public string Nextkinphone { get; set; }

        /// <summary>
        /// Gets or sets the first name of the patient's guardian.
        /// </summary>
        [JsonProperty(PropertyName = "guardianfirstname")]
        public string Guardianfirstname { get; set; }

        /// <summary>
        /// Gets or sets the middle name of the patient's guardian.
        /// </summary>
        [JsonProperty(PropertyName = "guardianmiddlename")]
        public string Guardianmiddlename { get; set; }

        /// <summary>
        /// Gets or sets the last name of the patient's guardian.
        /// </summary>
        [JsonProperty(PropertyName = "guardianlastname")]
        public string Guardianlastname { get; set; }

        /// <summary>
        /// Gets or sets the suffix of the patient's guardian.
        /// </summary>
        [JsonProperty(PropertyName = "guardiansuffix")]
        public string Guardiansuffix { get; set; }

        /// <summary>
        /// Gets or sets guarantor's first name
        /// </summary>
        [JsonProperty(PropertyName = "guarantorfirstname")]
        public string Guarantorfirstname { get; set; }

        /// <summary>
        /// Gets or sets guarantor's middle name
        /// </summary>
        [JsonProperty(PropertyName = "guarantormiddlename")]
        public string Guarantormiddlename { get; set; }

        /// <summary>
        /// Gets or sets guarantor's last name
        /// </summary>
        [JsonProperty(PropertyName = "guarantorlastname")]
        public string Guarantorlastname { get; set; }

        /// <summary>
        /// Gets or sets guarantor's name suffix
        /// </summary>
        [JsonProperty(PropertyName = "guarantorsuffix")]
        public string Guarantorsuffix { get; set; }

        /// <summary>
        /// Gets or sets guarantor's address
        /// </summary>
        [JsonProperty(PropertyName = "guarantoraddress1")]
        public string Guarantoraddress1 { get; set; }

        /// <summary>
        /// Gets or sets guarantor's address - line 2
        /// </summary>
        [JsonProperty(PropertyName = "guarantoraddress2")]
        public string Guarantoraddress2 { get; set; }

        /// <summary>
        /// Gets or sets guarantor's city
        /// </summary>
        [JsonProperty(PropertyName = "guarantorcity")]
        public string Guarantorcity { get; set; }

        /// <summary>
        /// Gets or sets guarantor's state (2 letter abbreviation)
        /// </summary>
        [JsonProperty(PropertyName = "guarantorstate")]
        public string Guarantorstate { get; set; }

        /// <summary>
        /// Gets or sets guarantor's zip
        /// </summary>
        [JsonProperty(PropertyName = "guarantorzip")]
        public string Guarantorzip { get; set; }

        /// <summary>
        /// Gets or sets guarantor's country code
        /// </summary>
        [JsonProperty(PropertyName = "guarantorcountrycode")]
        public string Guarantorcountrycode { get; set; }

        /// <summary>
        /// Gets or sets guarantor's country code (ISO 3166-1)
        /// </summary>
        [JsonProperty(PropertyName = "guarantorcountrycode3166")]
        public string Guarantorcountrycode3166 { get; set; }

        /// <summary>
        /// Gets or sets guarantor's DOB (mm/dd/yyyy)
        /// </summary>
        [JsonProperty(PropertyName = "guarantordob")]
        public string Guarantordob { get; set; }

        /// <summary>
        /// Gets or sets guarantor's SSN
        /// </summary>
        [JsonProperty(PropertyName = "guarantorssn")]
        public string Guarantorssn { get; set; }

        /// <summary>
        /// Gets or sets guarantor's email address
        /// </summary>
        [JsonProperty(PropertyName = "guarantoremail")]
        public string Guarantoremail { get; set; }

        /// <summary>
        /// Gets or sets guarantor's phone number. Invalid numbers in a GET/PUT
        /// will be ignored. Patient phone numbers and other data may change,
        /// and one phone number may be associated with multiple patients. You
        /// are responsible for taking additional steps to verify patient
        /// identity and for using this data in accordance with applicable law,
        /// including HIPAA. Invalid numbers in a POST will be ignored,
        /// possibly resulting in an error.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "guarantorphone")]
        public string Guarantorphone { get; set; }

        /// <summary>
        /// Gets or sets the guarantor's relationship to the patient
        /// </summary>
        [JsonProperty(PropertyName = "guarantorrelationshiptopatient")]
        public int? Guarantorrelationshiptopatient { get; set; }

        /// <summary>
        /// Gets or sets the address of the guarantor is the same as the
        /// patient.
        /// </summary>
        [JsonProperty(PropertyName = "guarantoraddresssameaspatient")]
        public bool? Guarantoraddresssameaspatient { get; set; }

        /// <summary>
        /// Gets or sets date the patient was registered.
        /// </summary>
        [JsonProperty(PropertyName = "registrationdate")]
        public string Registrationdate { get; set; }

        /// <summary>
        /// Gets or sets primary (registration) department ID.
        /// </summary>
        [JsonProperty(PropertyName = "departmentid")]
        public int? Departmentid { get; set; }

        /// <summary>
        /// Gets or sets flag determining whether or not the patient has
        /// accepted the Terms and Conditions for the patient portal.
        /// </summary>
        [JsonProperty(PropertyName = "portaltermsonfile")]
        public bool? Portaltermsonfile { get; set; }

        /// <summary>
        /// Gets or sets this flag is set if the patient's signature is on file
        /// </summary>
        [JsonProperty(PropertyName = "portalsignatureonfile")]
        public bool? Portalsignatureonfile { get; set; }

        /// <summary>
        /// Gets or sets this flag is set if the patient's privacy information
        /// has been verified. Privacy information returns True if all of the
        /// items referenced in GET
        /// /patients/{patientid}/privacyinformationverified are true. Privacy
        /// information returns false if any of the items referenced in the GET
        /// /patients/{patientid}/privacyinformationverified API are false or
        /// expired.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "privacyinformationverified")]
        public bool? Privacyinformationverified { get; set; }

        /// <summary>
        /// Gets or sets medication history consent status. If a practice
        /// doesn't have RXHub or Surescripts enabled, this will be null
        /// </summary>
        [JsonProperty(PropertyName = "medicationhistoryconsentverified")]
        public bool? Medicationhistoryconsentverified { get; set; }

        /// <summary>
        /// Gets or sets the long version of the marital status.
        /// </summary>
        [JsonProperty(PropertyName = "maritalstatusname")]
        public string Maritalstatusname { get; set; }

        /// <summary>
        /// Gets or sets the patient's employer's ID (from /employers call)
        /// </summary>
        [JsonProperty(PropertyName = "employerid")]
        public int? Employerid { get; set; }

        /// <summary>
        /// Gets or sets the patient's employer's phone number. Normally, this
        /// is set by setting employerid. However, setting this value can be
        /// used to override this on an individual patient. Invalid numbers in
        /// a GET/PUT will be ignored. Patient phone numbers and other data may
        /// change, and one phone number may be associated with multiple
        /// patients. You are responsible for taking additional steps to verify
        /// patient identity and for using this data in accordance with
        /// applicable law, including HIPAA. Invalid numbers in a POST will be
        /// ignored, possibly resulting in an error.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "employerphone")]
        public string Employerphone { get; set; }

        /// <summary>
        /// Gets or sets the guaranror's employer's ID (from /employers call)
        /// </summary>
        [JsonProperty(PropertyName = "guarantoremployerid")]
        public int? Guarantoremployerid { get; set; }

        /// <summary>
        /// Gets or sets the patient's employer's name.
        /// </summary>
        [JsonProperty(PropertyName = "employername")]
        public string Employername { get; set; }

        /// <summary>
        /// Gets or sets the patient's employer's address.
        /// </summary>
        [JsonProperty(PropertyName = "employeraddress")]
        public string Employeraddress { get; set; }

        /// <summary>
        /// Gets or sets the patient's employer's city.
        /// </summary>
        [JsonProperty(PropertyName = "employercity")]
        public string Employercity { get; set; }

        /// <summary>
        /// Gets or sets this flag is set if the patient has been given access
        /// to the portal. This may be set by the API user if a patient has
        /// been given access to the portal "by providing a preprinted brochure
        /// or flyer showing the URL where patients can access their Patient
        /// Care Summaries." The practiceinfo endpoint can provide the portal
        /// URL. While technically allowed, it would be very unusual to set
        /// this to false via the API.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "portalaccessgiven")]
        public bool? Portalaccessgiven { get; set; }

    }
}
