// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AndriiKurdiumov.AuthenaHealth.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class EncounterDiagnosis
    {
        /// <summary>
        /// Initializes a new instance of the EncounterDiagnosis class.
        /// </summary>
        public EncounterDiagnosis()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncounterDiagnosis class.
        /// </summary>
        /// <param name="diagnosisicd">The matching ICD9 or ICD10 codes for
        /// this diagnosis, where available.</param>
        /// <param name="orders">List of diagnoses for this encounter</param>
        /// <param name="diagnosissnomed">The SNOMED code for this diagnosis. 0
        /// means No Diagnosis.</param>
        /// <param name="diagnosis">The name of the diagnosis</param>
        public EncounterDiagnosis(IList<CodeInformation> diagnosisicd = default(IList<CodeInformation>), IList<PatientEncounterOrder> orders = default(IList<PatientEncounterOrder>), int? diagnosissnomed = default(int?), string diagnosis = default(string))
        {
            Diagnosisicd = diagnosisicd;
            Orders = orders;
            Diagnosissnomed = diagnosissnomed;
            Diagnosis = diagnosis;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the matching ICD9 or ICD10 codes for this diagnosis,
        /// where available.
        /// </summary>
        [JsonProperty(PropertyName = "diagnosisicd")]
        public IList<CodeInformation> Diagnosisicd { get; set; }

        /// <summary>
        /// Gets or sets list of diagnoses for this encounter
        /// </summary>
        [JsonProperty(PropertyName = "orders")]
        public IList<PatientEncounterOrder> Orders { get; set; }

        /// <summary>
        /// Gets or sets the SNOMED code for this diagnosis. 0 means No
        /// Diagnosis.
        /// </summary>
        [JsonProperty(PropertyName = "diagnosissnomed")]
        public int? Diagnosissnomed { get; set; }

        /// <summary>
        /// Gets or sets the name of the diagnosis
        /// </summary>
        [JsonProperty(PropertyName = "diagnosis")]
        public string Diagnosis { get; set; }

    }
}
