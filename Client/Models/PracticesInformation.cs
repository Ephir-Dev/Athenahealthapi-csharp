// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AthenaHealth.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PracticesInformation
    {
        /// <summary>
        /// Initializes a new instance of the PracticesInformation class.
        /// </summary>
        public PracticesInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PracticesInformation class.
        /// </summary>
        public PracticesInformation(bool iscoordinatorsender, bool hasclinicals, string name = default(string), string golivedate = default(string), string experiencemode = default(string), bool? hascommunicator = default(bool?), bool? iscoordinatorreceiver = default(bool?), bool? hascollector = default(bool?), string practiceid = default(string))
        {
            Iscoordinatorsender = iscoordinatorsender;
            Hasclinicals = hasclinicals;
            Name = name;
            Golivedate = golivedate;
            Experiencemode = experiencemode;
            Hascommunicator = hascommunicator;
            Iscoordinatorreceiver = iscoordinatorreceiver;
            Hascollector = hascollector;
            Practiceid = practiceid;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "iscoordinatorsender")]
        public bool Iscoordinatorsender { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasclinicals")]
        public bool Hasclinicals { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "golivedate")]
        public string Golivedate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "experiencemode")]
        public string Experiencemode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hascommunicator")]
        public bool? Hascommunicator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "iscoordinatorreceiver")]
        public bool? Iscoordinatorreceiver { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hascollector")]
        public bool? Hascollector { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "practiceid")]
        public string Practiceid { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
