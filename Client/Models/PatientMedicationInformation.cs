// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AndriiKurdiumov.AuthenaHealth.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PatientMedicationInformation
    {
        /// <summary>
        /// Initializes a new instance of the PatientMedicationInformation
        /// class.
        /// </summary>
        public PatientMedicationInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PatientMedicationInformation
        /// class.
        /// </summary>
        /// <param name="nomedicationsreported">Whether the patient explicitly
        /// has no reported medications</param>
        /// <param name="lastupdated">The last time any of the medications were
        /// updated</param>
        /// <param name="sectionnote">A section-wide note</param>
        /// <param name="patientdownloadconsent">Whether or not the patient has
        /// consented to have their medication history downloaded. There are
        /// plans to deprecate this field.</param>
        /// <param name="patientneedsdownloadconsent">Whether or not the
        /// patient needs to consent to have medication history downloaded.
        /// This will be true if either the patient has not currently
        /// consented, or the practice is not enabled for these downloads. This
        /// field is typically used when determining whether to message to the
        /// patient that they have not consented to these downloads. Note that
        /// regardless of this setting, medication history that has already
        /// been downloaded will remain available.
        /// </param>
        /// <param name="lastdownloadeddate">The time of the last attempted
        /// medication history download from SureScripts.</param>
        /// <param name="lastdownloaddenied">BETA FIELD: Whether or not the
        /// last medication history download was denied.
        /// </param>
        /// <param name="lastdownloaddenialreason">BETA FIELD: The reason the
        /// last medication history download was denied.
        /// </param>
        public PatientMedicationInformation(bool nomedicationsreported, IList<MedicationInformation> medications, string lastupdated, string sectionnote = default(string), bool? patientdownloadconsent = default(bool?), bool? patientneedsdownloadconsent = default(bool?), string lastdownloadeddate = default(string), bool? lastdownloaddenied = default(bool?), string lastdownloaddenialreason = default(string))
        {
            Nomedicationsreported = nomedicationsreported;
            Medications = medications;
            Sectionnote = sectionnote;
            Lastupdated = lastupdated;
            Patientdownloadconsent = patientdownloadconsent;
            Patientneedsdownloadconsent = patientneedsdownloadconsent;
            Lastdownloadeddate = lastdownloadeddate;
            Lastdownloaddenied = lastdownloaddenied;
            Lastdownloaddenialreason = lastdownloaddenialreason;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether the patient explicitly has no reported
        /// medications
        /// </summary>
        [JsonProperty(PropertyName = "nomedicationsreported")]
        public bool Nomedicationsreported { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "medications")]
        public IList<MedicationInformation> Medications { get; set; }

        /// <summary>
        /// Gets or sets a section-wide note
        /// </summary>
        [JsonProperty(PropertyName = "sectionnote")]
        public string Sectionnote { get; set; }

        /// <summary>
        /// Gets or sets the last time any of the medications were updated
        /// </summary>
        [JsonProperty(PropertyName = "lastupdated")]
        public string Lastupdated { get; set; }

        /// <summary>
        /// Gets or sets whether or not the patient has consented to have their
        /// medication history downloaded. There are plans to deprecate this
        /// field.
        /// </summary>
        [JsonProperty(PropertyName = "patientdownloadconsent")]
        public bool? Patientdownloadconsent { get; set; }

        /// <summary>
        /// Gets or sets whether or not the patient needs to consent to have
        /// medication history downloaded. This will be true if either the
        /// patient has not currently consented, or the practice is not enabled
        /// for these downloads. This field is typically used when determining
        /// whether to message to the patient that they have not consented to
        /// these downloads. Note that regardless of this setting, medication
        /// history that has already been downloaded will remain available.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "patientneedsdownloadconsent")]
        public bool? Patientneedsdownloadconsent { get; set; }

        /// <summary>
        /// Gets or sets the time of the last attempted medication history
        /// download from SureScripts.
        /// </summary>
        [JsonProperty(PropertyName = "lastdownloadeddate")]
        public string Lastdownloadeddate { get; set; }

        /// <summary>
        /// Gets or sets BETA FIELD: Whether or not the last medication history
        /// download was denied.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "lastdownloaddenied")]
        public bool? Lastdownloaddenied { get; set; }

        /// <summary>
        /// Gets or sets BETA FIELD: The reason the last medication history
        /// download was denied.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "lastdownloaddenialreason")]
        public string Lastdownloaddenialreason { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Medications == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Medications");
            }
            if (Lastupdated == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Lastupdated");
            }
            if (Medications != null)
            {
                foreach (var element in Medications)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
