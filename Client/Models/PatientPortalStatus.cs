// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AndriiKurdiumov.AuthenaHealth.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PatientPortalStatus
    {
        /// <summary>
        /// Initializes a new instance of the PatientPortalStatus class.
        /// </summary>
        public PatientPortalStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PatientPortalStatus class.
        /// </summary>
        /// <param name="familyregisteredyn">Is there a family member
        /// registered with access to this patient.</param>
        /// <param name="lastloginentity">Either "PATIENT" or "FAMILY", the
        /// last entity who accessed this patient.</param>
        /// <param name="noportalyn">The privacy setting for blocking the
        /// patient from the portal is set.</param>
        /// <param name="portalregistrationdate">The date the patient
        /// registered for the portal.</param>
        /// <param name="entitytodisplay">Either "FAMILY" or "PATIENT".</param>
        /// <param name="status">The status of the patient. Possible statuses:
        /// REGISTERED: The patient is registered for the portal.
        /// NOTREGISTERED: The patient is not registered for the portal.
        /// FAMILYLOGIN: This patient is set up for a family member to login.
        /// NOPORTAL: The privacy setting for blocking the patient from the
        /// portal is set. BLOCKEDFAILEDLOGINS: The patient is blocked because
        /// of failed login attempts. FAMILYBLOCKEDFAILEDLOGINS: The family
        /// member is blocked because of failed login attempts.
        /// </param>
        /// <param name="termsaccepted">Has this patient accepted the portal's
        /// Terms and Conditions. This is a good indicator if the patient has
        /// actually logged in to the portal or simply is registered without
        /// ever having logged in.</param>
        /// <param name="registeredyn">If this patient is registered or not for
        /// the portal.</param>
        /// <param name="blockedfailedloginsyn">Is this patient blocked from
        /// the portal due to failed login attempts.</param>
        /// <param name="lastlogindate">The last login date.</param>
        /// <param name="familyblockedfailedloginsyn">Is this patient's family
        /// blocked from the portal due to failed login attempts.</param>
        public PatientPortalStatus(bool? familyregisteredyn = default(bool?), string lastloginentity = default(string), bool? noportalyn = default(bool?), string portalregistrationdate = default(string), string entitytodisplay = default(string), string status = default(string), bool? termsaccepted = default(bool?), bool? registeredyn = default(bool?), bool? blockedfailedloginsyn = default(bool?), string lastlogindate = default(string), bool? familyblockedfailedloginsyn = default(bool?))
        {
            Familyregisteredyn = familyregisteredyn;
            Lastloginentity = lastloginentity;
            Noportalyn = noportalyn;
            Portalregistrationdate = portalregistrationdate;
            Entitytodisplay = entitytodisplay;
            Status = status;
            Termsaccepted = termsaccepted;
            Registeredyn = registeredyn;
            Blockedfailedloginsyn = blockedfailedloginsyn;
            Lastlogindate = lastlogindate;
            Familyblockedfailedloginsyn = familyblockedfailedloginsyn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets is there a family member registered with access to
        /// this patient.
        /// </summary>
        [JsonProperty(PropertyName = "familyregisteredyn")]
        public bool? Familyregisteredyn { get; set; }

        /// <summary>
        /// Gets or sets either "PATIENT" or "FAMILY", the last entity who
        /// accessed this patient.
        /// </summary>
        [JsonProperty(PropertyName = "lastloginentity")]
        public string Lastloginentity { get; set; }

        /// <summary>
        /// Gets or sets the privacy setting for blocking the patient from the
        /// portal is set.
        /// </summary>
        [JsonProperty(PropertyName = "noportalyn")]
        public bool? Noportalyn { get; set; }

        /// <summary>
        /// Gets or sets the date the patient registered for the portal.
        /// </summary>
        [JsonProperty(PropertyName = "portalregistrationdate")]
        public string Portalregistrationdate { get; set; }

        /// <summary>
        /// Gets or sets either "FAMILY" or "PATIENT".
        /// </summary>
        [JsonProperty(PropertyName = "entitytodisplay")]
        public string Entitytodisplay { get; set; }

        /// <summary>
        /// Gets or sets the status of the patient. Possible statuses:
        /// REGISTERED: The patient is registered for the portal.
        /// NOTREGISTERED: The patient is not registered for the portal.
        /// FAMILYLOGIN: This patient is set up for a family member to login.
        /// NOPORTAL: The privacy setting for blocking the patient from the
        /// portal is set. BLOCKEDFAILEDLOGINS: The patient is blocked because
        /// of failed login attempts. FAMILYBLOCKEDFAILEDLOGINS: The family
        /// member is blocked because of failed login attempts.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets has this patient accepted the portal's Terms and
        /// Conditions. This is a good indicator if the patient has actually
        /// logged in to the portal or simply is registered without ever having
        /// logged in.
        /// </summary>
        [JsonProperty(PropertyName = "termsaccepted")]
        public bool? Termsaccepted { get; set; }

        /// <summary>
        /// Gets or sets if this patient is registered or not for the portal.
        /// </summary>
        [JsonProperty(PropertyName = "registeredyn")]
        public bool? Registeredyn { get; set; }

        /// <summary>
        /// Gets or sets is this patient blocked from the portal due to failed
        /// login attempts.
        /// </summary>
        [JsonProperty(PropertyName = "blockedfailedloginsyn")]
        public bool? Blockedfailedloginsyn { get; set; }

        /// <summary>
        /// Gets or sets the last login date.
        /// </summary>
        [JsonProperty(PropertyName = "lastlogindate")]
        public string Lastlogindate { get; set; }

        /// <summary>
        /// Gets or sets is this patient's family blocked from the portal due
        /// to failed login attempts.
        /// </summary>
        [JsonProperty(PropertyName = "familyblockedfailedloginsyn")]
        public bool? Familyblockedfailedloginsyn { get; set; }

    }
}
