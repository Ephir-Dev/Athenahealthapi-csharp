// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AndriiKurdiumov.AuthenaHealth.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PatientProcedure
    {
        /// <summary>
        /// Initializes a new instance of the PatientProcedure class.
        /// </summary>
        public PatientProcedure()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PatientProcedure class.
        /// </summary>
        /// <param name="procedureid">Athena ID for this surgery</param>
        /// <param name="procedurecode">Procedure code</param>
        /// <param name="description">Surgery description for this procedure
        /// code</param>
        /// <param name="source">Source of this procedure. Can be encounter (if
        /// performed) or historical</param>
        /// <param name="providerid">ID of the provider that performed this
        /// procedure. Only returned for entries with
        /// source="encounter".</param>
        /// <param name="note">Additional note for this surgery, if
        /// available</param>
        /// <param name="proceduredate">Date when the surgery was
        /// performed</param>
        public PatientProcedure(int procedureid, string procedurecode = default(string), string description = default(string), string source = default(string), int? providerid = default(int?), string note = default(string), string proceduredate = default(string))
        {
            Procedureid = procedureid;
            Procedurecode = procedurecode;
            Description = description;
            Source = source;
            Providerid = providerid;
            Note = note;
            Proceduredate = proceduredate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets athena ID for this surgery
        /// </summary>
        [JsonProperty(PropertyName = "procedureid")]
        public int Procedureid { get; set; }

        /// <summary>
        /// Gets or sets procedure code
        /// </summary>
        [JsonProperty(PropertyName = "procedurecode")]
        public string Procedurecode { get; set; }

        /// <summary>
        /// Gets or sets surgery description for this procedure code
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets source of this procedure. Can be encounter (if
        /// performed) or historical
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets ID of the provider that performed this procedure. Only
        /// returned for entries with source="encounter".
        /// </summary>
        [JsonProperty(PropertyName = "providerid")]
        public int? Providerid { get; set; }

        /// <summary>
        /// Gets or sets additional note for this surgery, if available
        /// </summary>
        [JsonProperty(PropertyName = "note")]
        public string Note { get; set; }

        /// <summary>
        /// Gets or sets date when the surgery was performed
        /// </summary>
        [JsonProperty(PropertyName = "proceduredate")]
        public string Proceduredate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
