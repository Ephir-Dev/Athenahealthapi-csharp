// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace AthenaHealth.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PatientProblemEvent
    {
        /// <summary>
        /// Initializes a new instance of the PatientProblemEvent class.
        /// </summary>
        public PatientProblemEvent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PatientProblemEvent class.
        /// </summary>
        /// <param name="eventtype">The type of this event: START, END, HIDDEN,
        /// REACTIVATED, or ENCOUNTER
        /// </param>
        /// <param name="source">The source of this event: ENCOUNTER or HISTORY
        /// </param>
        /// <param name="status">The status of this problem event: CHRONIC or
        /// ACUTE
        /// </param>
        /// <param name="onsetdate">The specified onset date for this problem,
        /// as entered by the practice. If available this is more accurate than
        /// the start date.
        /// </param>
        /// <param name="startdate">The date this problem event started or was
        /// restarted. Uses the onsetdate if available, otherwise uses the date
        /// the problem was entered into the system.
        /// </param>
        /// <param name="enddate">The date this problem event ended or was
        /// hidden</param>
        /// <param name="encounterdate">The date of the encounter where a
        /// diagnosis matching this problem was used.</param>
        /// <param name="laterality">The laterality of this problem. Can be
        /// null, LEFT, RIGHT, or BILATERAL.</param>
        /// <param name="note">The note attached to this event.</param>
        /// <param name="createddate">The date that the user entered this
        /// problem.</param>
        /// <param name="createdby">The name of the user who entered this
        /// problem.</param>
        public PatientProblemEvent(IList<CodeInformation> diagnoses = default(IList<CodeInformation>), string eventtype = default(string), string source = default(string), string status = default(string), string onsetdate = default(string), string startdate = default(string), string enddate = default(string), string encounterdate = default(string), string laterality = default(string), string note = default(string), string createddate = default(string), string createdby = default(string))
        {
            Diagnoses = diagnoses;
            Eventtype = eventtype;
            Source = source;
            Status = status;
            Onsetdate = onsetdate;
            Startdate = startdate;
            Enddate = enddate;
            Encounterdate = encounterdate;
            Laterality = laterality;
            Note = note;
            Createddate = createddate;
            Createdby = createdby;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "diagnoses")]
        public IList<CodeInformation> Diagnoses { get; set; }

        /// <summary>
        /// Gets or sets the type of this event: START, END, HIDDEN,
        /// REACTIVATED, or ENCOUNTER
        ///
        /// </summary>
        [JsonProperty(PropertyName = "eventtype")]
        public string Eventtype { get; set; }

        /// <summary>
        /// Gets or sets the source of this event: ENCOUNTER or HISTORY
        ///
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets the status of this problem event: CHRONIC or ACUTE
        ///
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the specified onset date for this problem, as entered
        /// by the practice. If available this is more accurate than the start
        /// date.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "onsetdate")]
        public string Onsetdate { get; set; }

        /// <summary>
        /// Gets or sets the date this problem event started or was restarted.
        /// Uses the onsetdate if available, otherwise uses the date the
        /// problem was entered into the system.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "startdate")]
        public string Startdate { get; set; }

        /// <summary>
        /// Gets or sets the date this problem event ended or was hidden
        /// </summary>
        [JsonProperty(PropertyName = "enddate")]
        public string Enddate { get; set; }

        /// <summary>
        /// Gets or sets the date of the encounter where a diagnosis matching
        /// this problem was used.
        /// </summary>
        [JsonProperty(PropertyName = "encounterdate")]
        public string Encounterdate { get; set; }

        /// <summary>
        /// Gets or sets the laterality of this problem. Can be null, LEFT,
        /// RIGHT, or BILATERAL.
        /// </summary>
        [JsonProperty(PropertyName = "laterality")]
        public string Laterality { get; set; }

        /// <summary>
        /// Gets or sets the note attached to this event.
        /// </summary>
        [JsonProperty(PropertyName = "note")]
        public string Note { get; set; }

        /// <summary>
        /// Gets or sets the date that the user entered this problem.
        /// </summary>
        [JsonProperty(PropertyName = "createddate")]
        public string Createddate { get; set; }

        /// <summary>
        /// Gets or sets the name of the user who entered this problem.
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public string Createdby { get; set; }

    }
}
