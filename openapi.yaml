openapi: "3.0.0"
info:
  version: 1.0.0
  title: Athena Health
  license:
    name: MIT
servers:
  - url: https://api.athenahealth.com/

components:
  securitySchemes:
    defaultSecurityScheme:
      type: oauth2
      description: This API uses OAuth 2 with the clientCredentials grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        clientCredentials:
          tokenUrl: /oauthpreview/token
          scopes: {}
  parameters:
    apivariant: 
      name: apivariant
      in: path
      description: "Variant of the API"
      required: true
      schema:
        type: string
    practiceid: 
      name: practiceid
      in: path
      description: "Id of the practice"
      required: true
      schema:
        type: integer
        format: int32
    limit: 
      name: limit
      in: query
      description: "Number of entries to return (default 1500, max 5000)"
      required: false
      schema:
        type: integer
        format: int32
        maximum: 5000
    offset: 
      name: offset
      in: query
      description: Starting point of entries; 0-indexed
      required: false
      schema:
        type: integer
        format: int32
  schemas:
    PracticesInformation:
      required:
        - iscoordinatorsender
        - hasclinicals
      properties:
        iscoordinatorsender:
          type: boolean
        hasclinicals:
          type: boolean
        name:
          type: string
        golivedate:
          type: string
        experiencemode:
          type: string
        hascommunicator:
          type: boolean
        iscoordinatorreceiver:
          type: boolean
        hascollector:
          type: boolean
        practiceid:
          type: string
    PracticesInformationList:
      required:
        - totalcount
        - practiceinfo
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        practiceinfo:
          type: array
          x-ms-client-name: PracticeInfo
          items:
            $ref: "#/components/schemas/PracticesInformation"
    DepartmentInformation:
      required:
        - creditcardtypes
        - timezoneoffset
      properties:
        creditcardtypes:
          type: array
          items:
            type: string
        timezoneoffset:
          type: integer
          format: int32
        singleappointmentcontractmax:
          type: string
        state:
          type: string
        placeofservicefacility:
          type: boolean
        latitude:
          type: string
        departmentid:
          type: string
        address:
          type: string
        placeofservicetypeid:
          type: string
        longitude:
          type: string
        clinicals:
          type: string
        timezone:
          type: integer
          format: int32
        name:
          type: string
        patientdepartmentname:
          type: string
        chartsharinggroupid:
          type: string
        placeofservicetypename:
          type: string
        zip:
          type: string
        timezonename:
          type: string
        communicatorbrandid:
          type: string
        medicationhistoryconsent:
          type: boolean
        ishospitaldepartment:
          type: boolean
        providergroupid:
          type: string
        portalurl:
          type: string
        city:
          type: string
        servicedepartment:
          type: boolean
        oneyearcontractmax:
          type: string
        fax:
          type: string
        providergroupname:
          type: string
        doesnotobservedst:
          type: string
        phone:
          type: string
        ecommercecreditcardtypes:
          type: array
          items:
            type: string
    DepartmentInformationList:
      required:
        - totalcount
        - departments
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        departments:
          type: array
          items:
            $ref: "#/components/schemas/DepartmentInformation"
    PatientCreatedResponse:
      required:
        - patientId
      properties:
        patientid:
          type: integer
          format: int32
          x-ms-client-name: PatientId
    PatientInformation:
      properties:
        homeboundyn:
          type: boolean
          description: If the patient is homebound, this is true.
        assignedsexatbirth:
          type: string
          description: Sex that this patient was assigned at birth.
        altfirstname:
          type: string
          description: Alternate first name that differs from legal name.
        ethnicitycode:
          type: integer
          description: >
            Ethnicity of the patient, using the 2.16.840.1.113883.5.50 codeset.
            See http://www.hl7.org/implement/standards/fhir/terminologies-v3.html
            Special case: use "declined" to indicate that the patient declined to answer.
        industrycode:
          type: integer
          description: Industry of the patient, using the US Census industry code (code system 2.16.840.1.113883.6.310). "other" can be used as well.
        language6392code:
          type: integer
          description: >
            Language of the patient, using the ISO 639.2 code. (http://www.loc.gov/standards/iso639-2/php/code_list.php; "T" or terminology code)
            Special case: use "declined" to indicate that the patient declined to answer.
        localpatientid:
          type: string
          description: 'Given showlocalpatientid is true, comma separated local patient id will be returned, if patient id is enterprise id else given patient id will be displayed.'
        deceaseddate:
          type: string
          description: If present, the date on which a patient died.
        firstappointment:
          type: string
          description: The first appointment for this patient, excluding cancelled or no-show appointments. (mm/dd/yyyy h24:mi)
        primaryproviderid:
          type: integer
          description: The "primary" provider for this patient, if set.
        genderidentityother:
          type: string
          description: If a patient does not identify with any prescribed gender identity choice, this field stores the patient-provided description of gender identity.
        portalstatus:
          # Not sure about this.
          type: array
          description: Portal status details. See /patients/{patientid}/portalstatus for details.
          items:
            $ref: '#/components/schemas/PatientPortalStatus'
        preferredpronouns:
          description: Pronoun this patient uses.
          type: string
        lastappointment:
          description: The last appointment for this patient (before today), excluding cancelled or no-show appointments. (mm/dd/yyyy h24:mi)
          type: string
        #claimbalancedetails:
        #  description: Claim level details on patient balances. (This is only included when SHOWBALANCEDETAILS is set.)
        #  type: array
        #allpatientstatuses:
        #  description: message
        #  type: array
        donotcallyn:
          description: Warning! This patient will not receive any communication from the practice if this field is set to true.
          type: boolean
        primarydepartmentid:
          description: The patient's "current" department. This field is not always set by the practice.
          type: integer
        status:
          description: The "status" of the patient, one of active, inactive, prospective, or deleted.
          type: string
        #insurances:
        #  description: List of active patient insurance packages. Only shown for a single patient and if SHOWINSURANCE is set.
        #  type: array
        balances:
          description: List of balances owed by the patient, broken down by provider (financial) group.
          type: array
          items:
            $ref: '#/components/schemas/PatientBalanceInformation'
        lastemail:
          description: The last email for this patient on file.
          type: string
        #customfields:
        #  description: >
        #    Same as /patients/{patientid}/customfields call, but without the department ID.
        #    Depending on setup, and only in large practices, the custom field values may or may not be the same between departments.
        #    If this is a concern, using the /patients/{patientid}/customfields call is preferred.
        #    Only for a single patient when showcustomfields is set to true.
        #  type: array
        racecode:
          description: The patient race hierarchical code as specified in Race & Ethnicity - CDC * (2.16.840.1.113883.1.11.14914)
          type: string
        sexualorientation:
          description: Sexual orientation of this patient.
          type: string
        genderidentity:
          description: Gender with which this patient identifies.
          type: string
        emailexistsyn:
          description: True if email exists. False if patient declined. Null if status is unknown.
          type: boolean
        occupationcode:
          description: Occupation of the patient, using the US Census occupation code (code system 2.16.840.1.113883.6.240). "other" can be used as well.
          type: integer
        race:
          description: >
            The patient race, using the 2.16.840.1.113883.5.104 codeset.
            See http://www.hl7.org/implement/standards/fhir/terminologies-v3.html
            Special case: use "declined" to indicate that the patient declined to answer.
            Multiple values or a tab-seperated list of codes is acceptable for multiple races for input.
            The first race will be considered "primary".
            Note: you must update all values at once if you update any.
          type: array
          items:
            type: string
        sexualorientationother:
          description: If a patient does not identify with any prescribed sexual orientation choice, this field stores the patient-provided description of sexual orientation.
          type: string
        patientid:
          description: Please remember to never disclose this ID to patients since it may result in inadvertant disclosure that a patient exists in a practice already.
          type: integer
        firstname:
          description: Patient's first name
          type: string
        middlename:
          description: Patient's middle name
          type: string
        lastname:
          description: Patient's last name
          type: string
        suffix:
          description: Patient's name suffix
          type: string
        preferredname:
          description: The patient's preferred name (i.e. nickname).
          type: string
        address1:
          description: Patient's address - 1st line
          type: string
        address2:
          description: Patient's address - 2nd line
          type: string
        city:
          description: Patient's city
          type: string
        state:
          description: Patient's state (2 letter abbreviation)
          type: string
        zip:
          description: Patient's zip. Matching occurs on first 5 characters.
          type: string
        countrycode:
          description: Patient's country code
          type: string
        countrycode3166:
          description: Patient's country code (ISO 3166-1)
          type: string
        homephone:
          description: >
            The patient's home phone number. Invalid numbers in a GET/PUT will be ignored.
            Patient phone numbers and other data may change, and one phone number may be associated with multiple patients.
            You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.
            Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        mobilephone:
          description: >
            The patient's mobile phone number. On input, 'declined' can be used to indicate no number. 
            (Alternatively, hasmobile can also be set to false. "declined" simply does this for you.)
            Invalid numbers in a GET/PUT will be ignored.
            Patient phone numbers and other data may change, and one phone number may be associated with multiple patients.
            You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.
            Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        hasmobileyn:
          description: Set to false if a client has declined a phone number.
          type: boolean
        workphone:
          description: >
            The patient's work phone number. Generally not used to contact a patient.
            Invalid numbers in a GET/PUT will be ignored.
            Patient phone numbers and other data may change, and one phone number may be associated with multiple patients.
            You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.
            Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        email:
          description: Patient's email address. 'declined' can be used to indicate just that.
          type: string
        ssn:
          description: The patient's SSN
          type: string
        racename:
          description: The patient's primary race name. See race for more complete details.
          type: string
        sex:
          description: Patient's sex (M/F)
          type: string
        dob:
          description: Patient's DOB (mm/dd/yyyy)
          type: string
        maritalstatus:
          description: Marital Status (D=Divorced, M=Married, S=Single, U=Unknown, W=Widowed, X=Separated, P=Partner)
          type: string
        contactpreference:
          description: The MU-required field for "preferred contact method". This is not used by any automated systems.
          type: string
        contactname:
          description: >
            The name of the (emergency) person to contact about the patient.
            The contactname, contactrelationship, contacthomephone, and contactmobilephone fields are all related to the emergency contact for the patient.
            They are NOT related to the contractpreference_* fields.
          type: string
        contactrelationship:
          description: Emergency contact relationship (one of SPOUSE, PARENT, CHILD, SIBLING, FRIEND, COUSIN, GUARDIAN, OTHER)
          type: string
        contacthomephone:
          description: >
            Emergency contact home phone. Invalid numbers in a GET/PUT will be ignored.
            Patient phone numbers and other data may change, and one phone number may be associated with multiple patients.
            You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.
            Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        contactmobilephone:
          description: >
            Emergency contact mobile phone.
            Invalid numbers in a GET/PUT will be ignored.
            Patient phone numbers and other data may change, and one phone number may be associated with multiple patients.
            You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.
            Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        nextkinname:
          description: The full name of the next of kin.
          type: string
        nextkinrelationship:
          description: The next of kin relationship (one of SPOUSE, PARENT, CHILD, SIBLING, FRIEND, COUSIN, GUARDIAN, OTHER)
          type: string
        nextkinphone:
          description: >
            The next of kin phone number.
            Invalid numbers in a GET/PUT will be ignored.
            Patient phone numbers and other data may change, and one phone number may be associated with multiple patients.
            You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.
            Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        guardianfirstname:
          description: The first name of the patient's guardian.
          type: string
        guardianmiddlename:
          description: The middle name of the patient's guardian.
          type: string
        guardianlastname:
          description: The last name of the patient's guardian.
          type: string
        guardiansuffix:
          description: The suffix of the patient's guardian.
          type: string
        guarantorfirstname:
          description: Guarantor's first name
          type: string
        guarantormiddlename:
          description: Guarantor's middle name
          type: string
        guarantorlastname:
          description: Guarantor's last name
          type: string
        guarantorsuffix:
          description: Guarantor's name suffix
          type: string
        guarantoraddress1:
          description: Guarantor's address
          type: string
        guarantoraddress2:
          description: Guarantor's address - line 2
          type: string
        guarantorcity:
          description: Guarantor's city
          type: string
        guarantorstate:
          description: Guarantor's state (2 letter abbreviation)
          type: string
        guarantorzip:
          description: Guarantor's zip
          type: string
        guarantorcountrycode:
          description: Guarantor's country code
          type: string
        guarantorcountrycode3166:
          description: Guarantor's country code (ISO 3166-1)
          type: string
        guarantordob:
          description: Guarantor's DOB (mm/dd/yyyy)
          type: string
        guarantorssn:
          description: Guarantor's SSN
          type: string
        guarantoremail:
          description: Guarantor's email address
          type: string
        guarantorphone:
          description: >
            Guarantor's phone number.
            Invalid numbers in a GET/PUT will be ignored.
            Patient phone numbers and other data may change, and one phone number may be associated with multiple patients.
            You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.
            Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        guarantorrelationshiptopatient:
          description: The guarantor's relationship to the patient
          type: integer
        guarantoraddresssameaspatient:
          description: The address of the guarantor is the same as the patient.
          type: boolean
        registrationdate:
          description: Date the patient was registered.
          type: string
          #format: date
        departmentid:
          description: Primary (registration) department ID.
          type: integer
        portaltermsonfile:
          description: Flag determining whether or not the patient has accepted the Terms and Conditions for the patient portal.
          type: boolean
        portalsignatureonfile:
          description: This flag is set if the patient's signature is on file
          type: boolean
        privacyinformationverified:
          description: >
            This flag is set if the patient's privacy information has been verified.
            Privacy information returns True if all of the items referenced in GET /patients/{patientid}/privacyinformationverified are true.
            Privacy information returns false if any of the items referenced in the GET /patients/{patientid}/privacyinformationverified API are false or expired.
          type: boolean
        medicationhistoryconsentverified:
          description: Medication history consent status. If a practice doesn't have RXHub or Surescripts enabled, this will be null
          type: boolean
        maritalstatusname:
          description: The long version of the marital status.
          type: string
        employerid:
          description: The patient's employer's ID (from /employers call)
          type: integer
        employerphone:
          description: >
            The patient's employer's phone number. Normally, this is set by setting employerid.
            However, setting this value can be used to override this on an individual patient.
            Invalid numbers in a GET/PUT will be ignored.
            Patient phone numbers and other data may change, and one phone number may be associated with multiple patients.
            You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.
            Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        guarantoremployerid:
          description: The guaranror's employer's ID (from /employers call)
          type: integer
        employername:
          description: The patient's employer's name.
          type: string
        employeraddress:
          description: The patient's employer's address.
          type: string
        employercity:
          description: The patient's employer's city.
          type: string
        portalaccessgiven:
          description: >
            This flag is set if the patient has been given access to the portal.
            This may be set by the API user if a patient has been given access to the portal "by providing a preprinted brochure or flyer showing the URL where patients can access their Patient Care Summaries."
            The practiceinfo endpoint can provide the portal URL. While technically allowed, it would be very unusual to set this to false via the API.
          type: boolean
        #zip:
        #  description: message
        #  type: string
    PatientCcdaInformation:
      properties:
        ccda:
          type: string
          description: Content of CCDA record for the patient.
    PatientBalanceInformation:
      properties:
        contracts:
          description: Information related to existing credit card contracts.
          type: array
          items:
            $ref: '#/components/schemas/PatientBalanceContract'
        providergroupid:
          description: Athena ID for this financial group.
          type: string
        departmentlist:
          description: Comma separated list of department IDs that belong to this group
          type: string
        balance:
          description: Balance for this provider group.
          type: string
        cleanbalance:
          description: Indicates whether the balance is associated with a contract, payment plan, or collections agency.
          type: boolean
        collectionsbalance:
          description: The outstanding amount associated with a collections agency.
          type: string
        paymentplanbalance:
          description: The outstanding amount associated with a payment plan.
          type: string
    PatientBalanceContract:
      required:
        - contracts
      properties:
        availablebalance:
          description: The available balance on this contract.
          type: string
        contractclass:
          description: The type of contract. For example, "ONEYEAR,"
          type: string
        maxamount:
          description: The maximum allowed amount for this contract.
          type: string
    PatientPortalStatus:
      properties:
        familyregisteredyn:
          description: Is there a family member registered with access to this patient.
          type: boolean
        lastloginentity:
          description: Either "PATIENT" or "FAMILY", the last entity who accessed this patient.
          type: string
        noportalyn:
          description: The privacy setting for blocking the patient from the portal is set.
          type: boolean
        portalregistrationdate:
          description: The date the patient registered for the portal.
          type: string
        entitytodisplay:
          description: Either "FAMILY" or "PATIENT".
          type: string
        status:
          description: >
            The status of the patient. Possible statuses:
            REGISTERED: The patient is registered for the portal.
            NOTREGISTERED: The patient is not registered for the portal.
            FAMILYLOGIN: This patient is set up for a family member to login.
            NOPORTAL: The privacy setting for blocking the patient from the portal is set.
            BLOCKEDFAILEDLOGINS: The patient is blocked because of failed login attempts.
            FAMILYBLOCKEDFAILEDLOGINS: The family member is blocked because of failed login attempts.
          type: string
        termsaccepted:
          description: Has this patient accepted the portal's Terms and Conditions. This is a good indicator if the patient has actually logged in to the portal or simply is registered without ever having logged in.
          type: boolean
        registeredyn:
          description: If this patient is registered or not for the portal.
          type: boolean
        blockedfailedloginsyn:
          description: Is this patient blocked from the portal due to failed login attempts.
          type: boolean
        lastlogindate:
          description: The last login date.
          type: string
        familyblockedfailedloginsyn:
          description: Is this patient's family blocked from the portal due to failed login attempts.
          type: boolean
    CreatePersonForm:
      required:
        - dob
      properties:
        address1:
          description: "Patient's address - 1st line (Max length: 100)"
          type: string
        address2:
          description: "Patient's address - 2nd line (Max length: 100)"
          type: string
        city:
          description: "Patient's city (Max length: 30)"
          type: string
        departmentid:
          description: Primary (registration) department ID.
          type: integer
          format: int32
        dob:
          description: Patient's DOB (mm/dd/yyyy)
          type: string
        email:
          description: Patient's email address. 'declined' can be used to indicate just that.
          type: string
        firstname:
          description: Patient's first name
          type: string
    PatientInformationList:
      required:
        - totalcount
        - patients
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        next:
          type: string
        patients:
          type: array
          items:
            $ref: "#/components/schemas/PatientInformation"
    PatientMedicalHistoryQuestion:
      required:
        - questionid
      properties:
        questionid:
          description: Athena ID for the question
          type: integer
          format: int32
          x-ms-client-name: QuestionId
        question:
          description: Disease being inquired about
          type: string
        answer:
          description: The answer given by the patient to the question
          type: string
        note:
          description: Any special notes
          type: string
        diagnosiscode:
          description: Diagnosis code
          type: string
        codeset:
          description: Codeset the diagnosis code belongs to
          type: string
        description:
          description: Description of the code
          type: string
    PatientMedicalHistory:
      properties:
        sectionnote:
          description: Additional notes for the entire medical history section, if any
          type: string
        questions:
          type: array
          items:
            $ref: "#/components/schemas/PatientMedicalHistoryQuestion"
    Analyte:
      required:
        - analyteid
      properties:
        analyteid:
          description: Athena ID for the given lab result observation/analyte
          type: integer
          format: int32
          x-ms-client-name: AnalyteId
        analytename:
          description: Name / description specific to this analyte
          type: string
        loinc:
          description: Logical Observation Identifiers Names and Codes ID, if available
          type: string
        value:
          description: Value recorded for this observation
          type: string
        units:
          description: Units for this analyte entry, if provided by the lab
          type: string
        analytedate:
          description: Date when this observation was recorded
          type: string
        description:
          description: General description of the lab result test
          type: string
        note:
          description: Additional note for this analyte, if applicable
          type: string
        abnormalflag:
          description: Status indicator of the measurement relative to normal (low, high, normal, abnormal)
          type: string
        abnormalhl7code:
          description: The HL7 code related to the abnormal flag.
          type: string
        abnormalhl7name:
          description: The HL7 description related to the abnormal flag.
          type: string
        valuestatus:
          description: DEPRECATED -- use "abnormalflag" instead. Status indicator of the measurement relative to normal (low, high, normal, abnormal)
          type: string
        referencerange:
          description: Reference range of values accepted as normal for this observation
          type: string
        resultstatus:
          description: The status of the result (e.g., "final", "preliminary", "corrected", etc.)
          type: string
        labresultstatus:
          description: The status of the underlying lab result
          type: string
    AnalytesList:
      properties:
        analytes:
          type: array
          items:
            $ref: "#/components/schemas/Analyte"
    LabResult:
      required:
        - labresultid
      properties:
        analytes:
          type: array
          description: Individual lab result observations/analytes
          items:
            $ref: "#/components/schemas/Analyte"
        providerid:
          description: The provider ID for this document.
          type: string
        #interpretationtemplate:
        #  description: The interpretation template added to the lab result.
        #  type: string
        attachmentexists:
          description: This flag depicts if the lab result has a scanned document attachment or not.
          type: boolean
        labresultdatetime:
          description: >
            The observation date and time associated with this lab result.
            Returned in mm/dd/yyyy hh24:mi:ss format.
          type: string
        priority:
          description: >
            Document priority, when available. 1 is high, 2 is normal.
            Some labs use other numbers or characters that are lab-specific.
          type: string
        patientnote:
          description: The external note for the patient.
          type: string
        internalnote:
          description: The 'Internal Note' attached to this document.
          type: string
        facilityid:
          description: >
            The ID of the clinical provider associated with this clinical document.
            Clinical providers are a master list of providers throughout the country.
            These include providers as well as radiology centers, labs and pharmacies.
          type: integer
        labresultid:
          description: Athena ID for this lab result
          type: string
        orderid:
          description: The athena ID of the associated order document
          type: string
        description:
          description: Description for this lab result
          type: string
        labresultloinc:
          description: The LOINC for the result document or associated order.
          type: string
        labresultdate:
          description: Observation date associated with this lab result
          type: string
        labresultnote:
          description: Additional note associated with this lab result, if any
          type: string
        resultstatus:
          description: The status of the result (e.g., "final", "preliminary", "corrected", etc.)
          type: string
    LabResultList:
      required:
        - totalcount
        - results
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        results:
          type: array
          x-ms-client-name: Results
          items:
            $ref: "#/components/schemas/LabResult"
    PercentileSpec:
      properties:
        high:
          description: The highest value the y value could be.
          type: integer
        highordinal:
          description: Ordinal of the high value.
          type: string
        low:
          description: The lowest value that y could be.
          type: integer
        lowordinal:
          description: Ordinal of the lowest value.
          type: string
        prefix:
          description: >
            Indicator of less than or greater.
            Possible values: (>,<)
          type: string
    VitalAttributeReading:
      required:
        - vitalid
      properties:
        percentilespec:
          $ref: "#/components/schemas/PercentileSpec"
        vitalid:
          description: Unique ID for this vital attribute reading. Used to update/delete this reading.
          type: integer
        clinicalelementid:
          description: Key used to identify this particular vital attribute
          type: string
        source:
          description: The source of this reading.
          type: string
        sourceid:
          description: External key to source.
          type: integer
        readingid:
          description: >
            Numeric key used to tie related and distinguish separate readings.
            So the diastolic and systolic blood pressure should have the same readingid.
          type: integer
        readingtaken:
          description: Date that the reading was taken.
          type: string
        unit:
          description: Unit that describes this vital's value.
          type: string
        value:
          description: >
            The value of this reading.
            NOTE: for numeric values, the units are always in the 'native' units per the configuration.
          type: string
        code:
          description: Code indentifier for the reading.
          type: string
        codeset:
          description: Codeset of the code.
          type: string
        codedescription:
          description: Description of the code identifier.
          type: string
        createdby:
          description: The athenaNet username of the person who entered the vital.
          type: string
        createddate:
          description: >
            The date this vital was entered into the chart.
            Returned in mm/dd/yyyy hh24:mi:ss format.
          type: string
        isgraphable:
          description: Flag indicating if this vital is graphable.
          type: boolean
    PatientVital:
      properties:
        readings:
          type: array
          description: >
            List of vital attribute readings.
            One entry per attribute (so the temperature and where the temperature was taken are two different readings, tied together by the readingid
          items:
            $ref: "#/components/schemas/VitalAttributeReading"
        key:
          description: Key for this vital group. E.g., HEIGHT.
          type: string
        abbreviation:
          description: Short human-readable string for this vital group. E.g., Ht.
          type: string
        ordering:
          description: Configured order for this vital group
          type: integer
    VitalsList:
      required:
        - totalcount
        - vitals
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        vitals:
          type: array
          x-ms-client-name: Vitals
          items:
            $ref: "#/components/schemas/PatientVital"
    CodeInformation:
      required:
        - codeset
        - code
      properties:
        codeset:
          description: Codeset for this code (ICD9 or ICD10)
          type: string
        code:
          description: Actual ICD code for this diagnosis
          type: string
        description:
          description: Brief description for this code
          type: string
    PatientEncounterDiagnosis:
      required:
        - diagnosisid
      properties:
        diagnosisid:
          description: Athena ID for this diagnosis
          type: integer
        icdcodes:
          type: array
          description: message
          items:
            $ref: "#/components/schemas/CodeInformation"
        snomedcode:
          description: SNOMED Code for this diagnosis
          type: integer
        note:
          description: The note entered for this diagnosis.
          type: string
        description:
          description: Brief description for this SNOMED Code
          type: string
    PatientEncounter:
      properties:
        diagnoses:
          type: array
          description: List of diagnoses for this encounter
          items:
            $ref: "#/components/schemas/PatientEncounterDiagnosis"
        lastreopened:
          description: >
            The date the encounter was last reopened.
            The field will not be present if the encounter has not be closed.
          type: string
        departmentid:
          description: The athena department ID of this encounter
          type: integer
        appointmentid:
          description: Athena appointment ID resulting in this encounter
          type: integer
        encounterid:
          description: Athena ID for this encounter
          type: integer
        encountervisitname:
          description: The visit name for this encounter
          type: string
        encountertype:
          description: >
            Type of encounter (FLOWSHEET, ORDERSONLY, VISIT, etc.).
            By default only VISIT and ORDERSONLY are shown, use INCLUDEALLtypeS flag to see others.
          type: string
        status:
          description: >
            Status of this encounter (CLOSED, OPEN, PEND).
            By default only OPEN, CLOSED, and REVIEW statuses are shown, use INCLUDEALLSTATUSES flag to see others.
          type: string
        patientlocationid:
          description: Athena ID for the patient location
          type: integer
        patientlocation:
          description: Patient location
          type: string
        patientstatusid:
          description: Athena ID for the patient status
          type: integer
        patientstatus:
          description: Patient status
          type: string
        encounterdate:
          description: Date when this encounter occured
          type: string
        stage:
          description: Last stage of the encounter
          type: string
        providerid:
          description: The ID of the provider for this encounter
          type: integer
        providerfirstname:
          description: First name of the provider for this encounter
          type: string
        providerlastname:
          description: Last name of the provider for this encounter
          type: string
        providerphone:
          description: Phone number of the provider for this encounter
          type: string
        lastupdated:
          description: The date the encounter was last updated
          type: string
    EncountersList:
      required:
        - totalcount
        - encounters
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        encounters:
          type: array
          x-ms-client-name: Encounters
          items:
            $ref: "#/components/schemas/PatientEncounter"
    PatientEncounterOrder:
      properties:
        declinedreason:
          type: array
          description: >
            List of codes indicating why the order was not given.
            If this field is not present, the order was not declined.
            If the array is empty, no reason has been chosen.
          items:
            $ref: "#/components/schemas/CodeInformation"
        contraindicationreason:
          type: array
          description: >
            List of codes indicating why the order was contraindicated (for vaccines only).
            If this field is not present, the order does not contain a contraindication reason.
          items:
            $ref: "#/components/schemas/CodeInformation"
        externalcodes:
          type: array
          description: >
            When available, contains how this order maps to external vocabularies like LOINC, CVX, SNOMED, RXNORM, etc.
          items:
            $ref: "#/components/schemas/CodeInformation"
        createduser:
          description: The username of the person who created the order.
          type: string
        lastmodifiedby:
          description: The username of the person who last modified the order.
          type: string
        lastmodifieddatetime:
          description: The date this order was last modified.
          type: string
        orderid:
          description: The order (aka document) ID for this order.
          type: integer
        declinedreasontext:
          description: The user-facing description of the reason the order was not given.
          type: string
        description:
          description: A human readable description for this order
          type: string
        class:
          description: >
            The primary class of this order -- PRESCRIPTION, VACCINE, LAB, IMAGING, PATIENTINFO, etc.
          type: string
        classdescription:
          description: >
            The human-readable description of this document class, including sub class (prescription - new vs. prescription - renewal).
          type: string
        ordertypeid:
          description: The athena ID for this type of order. Can be used to create another order of this type.
          type: integer
        ordertype:
          description: The type of this order (Lab, Vaccine, etc.)
          type: string
        dateordered:
          description: The timestamp when the order was created.
          type: string
        orderingprovider:
          description: >
            The username of the ordering provider, which is different than the ordering user -- who may be an intake nurse for example.
          type: string
        assigneduser:
          description: The username of the user who this order task is currently assigned to for further processing as needed.
          type: string
        priority:
          description: Priority of a order.
          type: integer
        status:
          description: >
            The status the document is in (PEND, CLOSED, SUBMIT, SUBMITTED, etc).
          type: string
        documentationonly:
          description: If true, this order is here just as a record, and does not need to actually go out.
          type: boolean
        quantityvalue:
          description: The dosage quantity value.
          type: string
        refills:
          description: The number of refills allowed.
          type: string
        futuresubmitdate:
          description: The date this order will be submitted.
          type: string
        #clinicalprovider:
        #  description: Details about the provider the order is sent to.
        #  type: string
        ndc:
          description: The National Drug Code for the order
          type: string
    EncounterDiagnosis:
      properties:
        diagnosisicd:
          type: array
          description: The matching ICD9 or ICD10 codes for this diagnosis, where available.
          items:
            $ref: "#/components/schemas/CodeInformation"
        orders:
          type: array
          description: List of diagnoses for this encounter
          items:
            $ref: "#/components/schemas/PatientEncounterOrder"
        diagnosissnomed:
          description: The SNOMED code for this diagnosis. 0 means No Diagnosis.
          type: integer
        diagnosis:
          description: The name of the diagnosis
          type: string
    EncounterDiagnosesList:
      required:
        - totalcount
        - diagnoses
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        diagnoses:
          type: array
          x-ms-client-name: Diagnoses
          items:
            $ref: "#/components/schemas/EncounterDiagnosis"
    ProviderInformation:
      properties:
        billable:
          type: boolean
          description: Indicates if this is a billable provider.
        ansispecialtycode:
          type: string
          description: This is the ANSI code for this provider's specialty.
        firstname:
          type: string
          description: The provider's first name.
        entitytype:
          type: string
          description: Either "Person" or "Non-Person" (e.g. X-Ray machines)
        otherprovideridlist:
          type: string
          description: >
            When showallproviderids is set to true, a list of all other athenaNet providers IDs that may refer to this same provider.
            If not present with showallproviderids, there are no other IDs other than the primary ID.
        ansinamecode:
          type: string
          description: This is the ANSI name with ANSI code for this provider's specialty.
        displayname:
          type: string
          description: The preferred name to use when displaying this provider.
        homedepartment:
          type: string
          description: For certain purposes, this can be considered to be the "home" or default department for a provider.
        providerid:
          type: integer
          description: >
            The ID to be used for this provider.
            Note that in athenaNet, an individual provider (as defined by a unique NPI) may have multiple provider IDs.
            For the API, we have collapsed these to a single canonical ID.
        providertypeid:
          type: string
          description: This is just the ID (a text string) such as "NP" or "NP S" for the provider type.
        providerusername:
          type: string
          description: The username of the provider.
        supervisingproviderid:
          type: integer
          description: The ID of the supervising provider.
        providertype:
          type: string
          description: >
            There is a long potential list of provider type in the form "full name (id)", 
            but "MD", "NP" or "NP S" (Nurse Practitioner (Supervising)), "RES" (resident), "EQUIP", "DO",
            "PA" or "PASUP" (Physician's Assistant (Supervising)), "TECH", "RN", LPT", "CRNA"
            or "CRNASUP" (Certified Registered Nurse Anesthesiologist (Supervising)), and MA (Medical Assistant) are among the most common.
        createencounterprovideridlist:
          type: string
          description: >
            A list of provider IDs for this provider NPI that will create an encounter when the appointment is checked in 
            for encounter supported appointment types. Only populated if 'showallproviderids' is set.
        schedulingname:
          type: string
          description: The scheduling name for this provider (as used in athenaNet).
        usualdepartmentid:
          type: string
          description: The "usual" department for this provider, if SHOWUSUALDEPARTMENTGUESSTHRESHOLD is set.
        createencounteroncheckinyn:
          type: boolean
          description: >
            If true, appointments scheduled with this provider will create an encounter when the appointment is checked infor encounter supported appointment types.
            Only applies to the primary providerid.
            If the provider has other IDs with the same API, please use 'showallproviderids' to see which IDs create encounters.
        specialty:
          type: string
          description: A friendly name for this provider's specialty.
        hideinportalyn:
          type: boolean
          description: >
            If set, this provider does not appear in athenaCommunicator's web portal.
        lastname:
          type: string
          description: The provider's last name.
        npi:
          type: integer
          description: The NPI for this provider, if available.
        providergrouplist:
          type: string
          description: >
            When showallproviderids is set to true, a list of all provider groups that this provider is registered in.
            Data is only relevant if a practice is using Provider-Group-Based Data Permissions in their practice.
        federalidnumber:
          type: string
          description: The federal ID number for provider, if SHOWFEDERALIDNUMBER is set.
        supervisingproviderusername:
          type: string
          description: The username of the supervising provider.
    ProvidersInformationList:
      required:
        - totalcount
        - practiceinfo
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        providers:
          type: array
          x-ms-client-name: Providers
          items:
            $ref: "#/components/schemas/ProviderInformation"
    ProviderCreatedResponse:
      required:
        - providerid
      properties:
        providerid:
          type: integer
          format: int32
          x-ms-client-name: ProviderId
          description: >
            The ID to be used for this provider.
            Note that in athenaNet, an individual provider (as defined by a unique NPI) may have multiple provider IDs.
            For the API, we have collapsed these to a single canonical ID.
            For updates and deletes, this will be either 1 or -1 depending on success or failure.
        errorreason:
          type: string
          x-ms-client-name: ErrorReason
          description: Error message if the operation did not work.
        alertmessage:
          type: string
          x-ms-client-name: AlertMessage
          description: Alert message if the operation did not work.
    AppointmentTypeInformation:
      required:
        - name
        - appointmenttypeid
      properties:
        name:
          description: The name of the appointment type.
          type: string
        duration:
          description: Expected duration of the appointment in minutes.
          type: integer
        genericyn:
          description: If true, this type is a "generic" type able to be filled with other types of appointments.
          type: boolean
        shortname:
          description: The short name code of the appointment type.
          type: string
        patientyn:
          description: If true, this type is a patient-facing type.
          type: boolean
        patientdisplayname:
          description: Patient friendly appointment type name. Defaults to regular name.
          type: string
        appointmenttypeid:
          description: The appointment type ID.
          type: integer
        templatetypeonlyyn:
          description: If true, this type is a "template-only" type, and must be filled with a different appointment type upon booking.
          type: boolean
        createencounteroncheckin:
          description: >
            If true, then this appointments of this type will generated an encounter when checked in, with certain conditions.
            It's rather complex, but the rendering provider on the appointment must also have the create encounter feature set, the department must have athena Clinicals enabled, and other rarer and less visible settings.
          type: boolean
    AppointmentNoteInformation:
      properties:
        id:
          description: The id of the appointment note.
          type: integer
          format: int32
        text:
          description: The note associated with the appointment.
          type: string
        displayonschedule:
          description: Whether the note should be displayed on the schedule.
          type: boolean
    AppointmentCopayInformation:
      properties:
        insurancecopay:
          description: The expected copay based on the patient's primary insurance and appointment type.
          type: string
        collectedforappointment:
          description: Copay payments that have already been collected for this specific appointment.
          type: string
        collectedforother:
          description: Copay payments that have already been collected for this patient, but that have not yet been applied to any specific appointment.
          type: string
    ProcedureCode:
      properties:
        procedurecode:
          description: The ID of the code.
          type: string
        procedurecodedescription:
          description: The description of the code.
          type: string
    MessageResult:
      properties:
        messagetype:
          description: The type of message that was attempted.
          type: string
        calltime:
          description: Date and time of the call attempt.
          type: string
        messageresultid:
          description: Id of the message attempt.
          type: integer
        result:
          description: A description of what happened during the call attempt.
          type: string
    AppointmentInformation:
      properties:
        reasonid:
          description: A list of reason IDs that could be used for this slot. Only present if multiple reason IDs are requested.
          type: integer
          format: int32
          x-ms-client-name: ReasonId
        appointmentnotes:
          description: message
          type: array
          items:
            $ref: "#/components/schemas/AppointmentNoteInformation"
        appointmentstatus:
          description: >
            The athenaNet appointment status. There are several possible statuses. x=cancelled. f=future.
            (It can include appointments where were never checked in, even if the appointment date is in the past.
            It is up to a practice to cancel appointments as a no show when appropriate to do so.)
            o=open. 2=checked in. 3=checked out. 4=charge entered (i.e. a past appointment).
          type: string
        cancelleddatetime:
          description: The time (mm/dd/yyyy hh24:mi:ss; Eastern time) that this appointment was cancelled (if cancelled)
          type: string
        chargeentrynotrequired:
          description: This field will tell if an appointment has been marked as not requiring change entry.
          type: boolean
        hl7providerid:
          description: This is the raw provider ID that should be used ONLY if using this appointment in conjunction with an HL7 message and with athenahealth's prior guidance. It is only available in some situations.
          type: integer
        cancelreasonname:
          description: >
            If the appointment was cancelled, the name (local to the practice) for the cancel reason.
          type: string
        chargeentrynotrequiredreason:
          description: This field will give the reason that an appointment has been marked as not requiring charge entry.
          type: string
        lastmodified:
          description: >
            The date/time when the appointment was last modified.
            Note: It may be possible for the lastmodified field to be updated without any other field in the API call being changed.
            This occurs when appointment fields not included in the API output are updated.
          type: string
        departmentid:
          description: Id of the department
          type: integer
        checkoutdatetime:
          description: The time (mm/dd/yyyy hh24:mi:ss) that the appointment was checked out.
          type: string
        copay:
          description: >
            Expected copay for this appointment.
            Based on the appointment type, the patient's primary insurance, and any copays collected. To see the amounts used in this calculated value, see the APPOINTMENTCOPAY fields.
          type: string
        encounterid:
          description: >
            The encounter id associated with this appointment, useful for certain other calls.
            Only present for appointments with Clinicals that have been checked in.
          type: string
        scheduledby:
          description: The username who scheduled the appointment.
          type: string
        checkindatetime:
          description: The time (mm/dd/yyyy hh24:mi:ss) that the appointment was checked in.
          type: string
        cancelledby:
          description: >
            If the appointment has been cancelled, the username who cancelled the appointment.
          type: string
        stopintakedatetime:
          description: The time (mm/dd/yyyy hh24:mi:ss) that the intake process was completed.
          type: string
        encounterstatus:
          description: >
            The status of this patient in the encounter (READYFORSTAFF, WITHSTAFF, READFORPROVIDER, CHECKEDOUT).
            Only present for appointments with Clinicals that have been checked in.
          type: string
        frozenyn:
          description: >
            If true, this appointment slot is frozen
          type: boolean
        appointmenttype:
          description: >
            The practice-friendly (not patient friendly) name for this appointment type.
            Note that this may not be the same as the booked appointment because of "generic" slots.
          type: string
        appointmenttypeid:
          description: This is the ID for the appointment type. Note that this may not be the same as the booked appointment because of "generic" slots.
          type: integer
        cancelreasonid:
          description: If the appointment was cancelled, the numeric ID (local to the practice) for the cancel reason.
          type: integer
        cancelreasonnoshow:
          description: If the appointment was cancelled, if the cancel reason is marked as a no show reason.
          type: boolean
        cancelreasonslotavailable:
          description: If the appointment was cancelled, if the cancel reason is marked as a slot available reason.
          type: boolean
        coordinatorenterpriseyn:
          description: If true, the appointment was booked through athenaCoordinator Enterprise.
          type: boolean
        duration:
          description: In minutes
          type: integer
        scheduleddatetime:
          description: The time (mm/dd/yyyy hh24:mi:ss; Eastern time) that this appointment was scheduled.
          type: string
        urgentyn:
          description: Urgent flag for the appointment.
          type: boolean
        startcheckin:
          description: >
            The timestamp when the appointment started the check in process.
            If this is set while an appointment is still in status 'f', it means that the check-in process has begun but is not yet completed.
          type: string
        appointmentconfirmationid:
          description: If there is an appointment confirmation result for this appointment, the numeric ID (global to athenaNet).
          type: integer
        suggestedoverbooking:
          description: High risk score for Smart Scheduling
          type: string
        appointmentcopay:
          description: >
            Detailed information about the copay for this appointment.
            Gives more detail than the COPAY field.
            Note: this information is not yet available in all practices, we are rolling this out slowly.
          type: array
          items:
            $ref: "#/components/schemas/AppointmentCopayInformation"
        appointmentid:
          description: Appointment ID of the booked appointment
          type: integer
        date:
          description: The appointment date.
          type: string
        patient:
          description: See /patients for details
          type: string
        startcheckoutdatetime:
          description: The time (mm/dd/yyyy hh24:mi:ss) that the appointment check-out was started.
          type: string
        appointmentconfirmationname:
          description: If there is an appointment confirmation result for this appointment, the name (global to athenaNet).
          type: string
        useexpectedprocedurecodes:
          description: An array of expected procedure codes attached to this appointment.
          type: array
          items:
            $ref: "#/components/schemas/ProcedureCode"
        lastmodifiedby:
          description: The user who last modified the appointment.
          type: string
        patientappointmenttypename:
          description: The patient-friendly name for this appointment type. Note that this may not be the same as the booked appointment because of "generic" slots.
          type: string
        starttime:
          description: As HH:MM (where HH is the 0-23 hour and MM is the minute). This time is local to the department.
          type: string
        stopcheckin:
          description: The timestamp when the check-in process was finished for this appointment.
          type: string
        providerid:
          description: Id of the provider
          type: integer
        stopexamdatetime:
          description: The time (mm/dd/yyyy hh24:mi:ss) that the exam was completed.
          type: string
        renderingproviderid:
          description: The rendering provider ID.
          type: integer
        supervisingproviderid:
          description: The supervising provider ID.
          type: string
        #claims:
        #  description: As detailed in /claims, if requested.
        #  type: array
        #insurances:
        #  description: List of active patient insurance packages. Only shown for single or multiple booked appointments if SHOWINSURANCE is set.
        #  type: array
        patientlocationid:
          description: The location of the patient. See /patientlocation for practice list. Only present for appointments with Clinicals that have been checked in.
          type: integer
        encounterstate:
          description: >
            The status of the clinical encounter associated with this appointment (OPEN, CLOSED, DELETED, PEND, etc.).
            This differs from encounterstatus, which refers to the status of the patient in the encounter.
          type: string
        rescheduledappointmentid:
          description: When an appointment is rescheduled, this is the ID of the replacement appointment.
          type: integer
        referringproviderid:
          description: The referring provider ID.
          type: integer
        reminderdetails:
          description: Detailed ReminderCall information made for this appointment.
          type: array
          items:
            $ref: "#/components/schemas/MessageResult"
        templateappointmenttypeid:
          description: The original appointment type for this slot. This can change for generic appointments.
          type: integer
        templateappointmentid:
          description: The original appointment ID. This is useful if an appointment has been cancelled and you want to find the original ID.
          type: integer
        patientid:
          description: The athenaNet patient ID for this appointment
          type: integer
    AppointmentTypeInformationList:
      required:
        - totalcount
        - appointmenttypes
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        appointmenttypes:
          type: array
          x-ms-client-name: AppointmentTypes
          items:
            $ref: "#/components/schemas/AppointmentTypeInformation"
    AppointmentInformationIds:
      type: array
      items:
        type: integer
    AppointmentInformationArray:
      type: array
      items:
        $ref: "#/components/schemas/AppointmentInformation"
    AppointmentInformationList:
      required:
        - totalcount
        - appointments
      properties:
        totalcount:
          type: integer
          format: int32
          x-ms-client-name: TotalCount
        appointments:
          type: array
          x-ms-client-name: Appointments
          items:
            $ref: "#/components/schemas/AppointmentInformation"
    MedicationEvent:
      required:
        - type
        - eventdate
      properties:
        type:
          description: The event type. Can be START, END, ORDER, ENTER, FILL, or HIDE.
          type: string
        eventdate:
          description: The date this event occurred
          type: string
        userdisplayname:
          description: The display name for the user most relevant for this event. May be null.
          type: string
    DosageInformation:
      required:
        - dosageaction
        - dosagequantityvalue
        - dosagequantityunit
      properties:
        dosageaction:
          description: How the medication is taken. Examples are Chew, Take, Inhale, etc.
          type: string
        dosagequantityvalue:
          description: How many of this med is taken.
          type: integer
        dosagequantityunit:
          description: >
            The unit of the quantity. Example: tablets, sprays, etc.
          type: string
        dosagefrequencyvalue:
          description: How many times (in the given time unit) this should be taken.
          type: integer
        dosagefrequencyunit:
          description: >
            The unit of the frequency. Example: per day, per week.
          type: string
        dosagefrequencydescription:
          description: >
            A standardized patient-friendly frequency. Example: 6 per day becomes "every 4 hours".
          type: string
        dosageroute:
          description: >
            How this medication is taken. Example: oral, inhalation, intranasal, etc.
          type: string
        dosageadditionalinstructions:
          description: >
            Additional instructions. Example: with meals
          type: string
        dosagedurationvalue:
          description: How many duration time units this medication should be taken for.
          type: integer
        dosagedurationunit:
          description: >
            The unit of the duration. Example: days. So take this for days.
          type: string
    MedicationInformation:
      required:
        - events
        - medications
        - medicationid
      properties:
        events:
          type: array
          description: >
            The list of events for this medication. Can be START, END, ORDER, ENTER, FILL, or HIDE.
          items:
            $ref: "#/components/schemas/MedicationEvent"
        structuredsig:
          $ref: "#/components/schemas/DosageInformation"
          description: >
            Components of the structured sig.
        medicationentryid:
          description: >
            Primary ID for this medication entry.
            Those starting with C are clinical prescriptions, and those starting with H are historical (entered, downloaded, etc).
          type: string
        medicationid:
          description: Athena ID for this medication.
          type: integer
        medication:
          description: The name of the medication.
          type: string
        isstructuredsig:
          description: Whether the sig for this entry is structured.
          type: boolean
        unstructuredsig:
          description: >
            The unstructured sig for this medication, if any.
            If there is a structured sig, this will contain the formatted version of that sig.
          type: string
        source:
          description: >
            How this medication was entered. This can be the ordering provider, a medication history download (express scripts, medco, etc), 
            ATHENA (which means it was entered manually), etc.
          type: string
        status:
          description: >
            The status of this medication.
            Medications in PEND status are associated with approved future orders and have not yet been submitted.
          type: string
        organclass:
          description: The organ class for this medication. This is equivalent to a medication class.
          type: string
        therapeuticclass:
          description: The therapeutic class for this medication. This is equivalent to a medication subclass.
          type: string
        futuresubmitdate:
          description: The date a medication will be submitted. Included if the medication is in PEND status and attached to a approved future order.
          type: string
        encounterid:
          description: If this was a prescription, this contains the ID of the encounter where it was ordered or administered
          type: integer
        createdby:
          description: >
            The athenaNet username of the person who entered or ordered the medication.
            Downloaded medications have INTERFACE for this field.
          type: string
        approvedby:
          description: For clinical prescriptions, the athenaNet username of the person who approved this prescription.
          type: string
        billingndc:
          description: The billing NDC code for this medication.
          type: string
        orderingmode:
          description: The ordering mode for prescriptions. Can be PRESCRIBE, DISPENSE, or ADMINISTER.
          type: string
        quantity:
          description: The total quantity prescribed, dispensed, administered. This is not currently available for historical (downloaded) medications.
          type: integer
        quantityunit:
          description: >
            The unit of the quantity. Example: tablets, sprays, etc.
          type: string
        refillsallowed:
          description: The number of refills allowed when this medication was ordered.
          type: integer
        issafetorenew:
          description: Is this medication safe to renew?
          type: boolean
        stopreason:
          description: The reason why this medication was stopped.
          type: string
        providernote:
          description: Non-patient facing note for ths prescription. Labeled "internal note" in the UI.
          type: string
        patientnote:
          description: Patient-facing note for this prescription. Labeled "note" in the UI.
          type: string
        pharmacy:
          description: The name of the pharmacy where this medication was filled.
          type: string
        pharmacyncpdpid:
          description: The NCPDP ID of the pharmacy for this medication.. See http://www.ncpdp.org/ for details.
          type: string
        prescribedby:
          description: The user who prescribed this medication.
          type: string
        ndcoptions:
          description: The list of NDC numbers that correspond to this medication.
          type: string
        rxnorm:
          description: The list of RxNorm Identifiers that correspond to this medication. This list may contain both branded and generic identifiers
          type: array
          items:
            type: string
        route:
          description: The route for the prescription.
          type: string
    PatientMedicationInformation:
      required:
        - nomedicationsreported
        - medications
        - lastupdated
      properties:
        nomedicationsreported:
          description: Whether the patient explicitly has no reported medications
          type: boolean
        medications:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/MedicationInformation"
        sectionnote:
          description: A section-wide note
          type: string
        lastupdated:
          description: The last time any of the medications were updated
          type: string
        patientdownloadconsent:
          description: Whether or not the patient has consented to have their medication history downloaded. There are plans to deprecate this field.
          type: boolean
        patientneedsdownloadconsent:
          description: >
            Whether or not the patient needs to consent to have medication history downloaded.
            This will be true if either the patient has not currently consented, or the practice is not enabled for these downloads.
            This field is typically used when determining whether to message to the patient that they have not consented to these downloads.
            Note that regardless of this setting, medication history that has already been downloaded will remain available.
          type: boolean
        lastdownloadeddate:
          description: The time of the last attempted medication history download from SureScripts.
          type: string
        lastdownloaddenied:
          description: >
            BETA FIELD: Whether or not the last medication history download was denied.
          type: boolean
        lastdownloaddenialreason:
          description: >
            BETA FIELD: The reason the last medication history download was denied.
          type: string
    OperationStatusData:
      required:
        - status
      properties:
        status:
          type: string
          description: The status of this appointment after the operation (generally "x").
    Error:
      required:
        - error
      properties:
        missingfields:
          type: array
          items:
            type: string
        fields:
          type: array
          items:
            type: string
        error:
          type: string
        detailedmessage:
          type: string
          x-ms-client-name: DetailedMessage
  requestBodies:
    CreatePerson:
      x-ms-client-name: createPerson
      required: true
      content:
        'application/x-www-form-urlencoded':
          schema:
            $ref: '#/components/schemas/CreatePersonForm'


security:
  - defaultSecurityScheme: []

paths:
  /{apivariant}/{practiceid}/practiceinfo:
    get:
      summary: Get available practice IDs
      operationId: getPracticeInfo
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: limit
          in: query
          description: Number of entries to return (default 1500, max 5000)
          required: false
          schema:
            type: integer
            format: int32
            maximum: 5000
        - name: offset
          in: query
          description: Starting point of entries; 0-indexed
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Array of available practices
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PracticesInformationList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/departments:
    get:
      summary: Get department IDs
      operationId: getDepartments
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: limit
          in: query
          description: Number of entries to return (default 1500, max 5000)
          required: false
          schema:
            type: integer
            format: int32
            maximum: 5000
        - name: offset
          in: query
          description: Starting point of entries; 0-indexed
          required: false
          schema:
            type: integer
            format: int32
        - name: hospitalonly
          in: query
          description: 
            If set to true, return hospital only departments.
          required: false
          schema:
            type: boolean
        - name: showalldepartments
          in: query
          description: 
            By default, departments hidden in the portal do not appear. When this is set to true, that restriction is not applied. Default is false.
          required: false
          schema:
            type: boolean
        - name: providerlist
          in: query
          description: 
            If set to true, list providers who see patients in this department. Default is false.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Array of available departments
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/DepartmentInformationList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/patients:
    get:
      summary: Search for patients
      operationId: getPatients
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: query
          name: departmentid
          description: Primary (registration) department ID.
          schema:
            type: integer
        - in: query
          name: firstname
          description: First name of the patient to find.
          schema:
            type: string
        - in: query
          name: lastname
          description: Last name of the patient to find.
          schema:
            type: string
      responses:
        '200':
          description: Array of available patients with given search criteria
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PatientInformationList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"        
    post:
      summary: Register new patient
      operationId: createPatient
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
      requestBody:
        required: true
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              properties:
                address1:
                  description: "Patient's address - 1st line (Max length: 100)"
                  type: string
                address2:
                  description: "Patient's address - 2nd line (Max length: 100)"
                  type: string
                city:
                  description: "Patient's city (Max length: 30)"
                  type: string
                departmentid:
                  description: Primary (registration) department ID.
                  type: integer
                  format: int32
                dob:
                  description: Patient's DOB (mm/dd/yyyy)
                  type: string
                email:
                  description: Patient's email address. 'declined' can be used to indicate just that.
                  type: string
                firstname:
                  description: Patient's first name
                  type: string
                homephone:
                  description: The patient's home phone number. Invalid numbers in a GET will be ignored. Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA. Only phone numbers that exist in the North American Naming Plan (NANP) are acceptable for input.
                  type: string
                lastname:
                  description: Patient's last name
                  type: string
                mobilephone:
                  description: The patient's mobile phone number. On input, 'declined' can be used to indicate no number. (Alternatively, hasmobile can also be set to false. "declined" simply does this for you.) Invalid numbers in a GET will be ignored. Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA. Only phone numbers that exist in the North American Naming Plan (NANP) are acceptable for input.
                  type: string
                state:
                  description: Patient's state (2 letter abbreviation)
                  type: string
                zip:
                  description: Patient's zip. Matching occurs on first 5 characters.
                  type: string
                sex:
                  description: Patient's sex (M/F)
                  type: string
                race:
                  description: >
                    The patient race, using the 2.16.840.1.113883.5.104 codeset.
                    See http://www.hl7.org/implement/standards/fhir/terminologies-v3.html
                    Special case: use "declined" to indicate that the patient declined to answer.
                    Multiple values or a tab-seperated list of codes is acceptable for multiple races for input.
                    The first race will be considered "primary".
                    Note: you must update all values at once if you update any.	
                  type: string
      responses:
        '200':
          description: Array of information about created patients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PatientCreatedResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/patients/{patientId}:
    get:
      summary: Get a patients by ID
      operationId: getPatientById
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: path
          name: patientId
          description: Id of the patient for which get information
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Array of information about patient
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PatientInformation"
  /{apivariant}/{practiceid}/patients/{patientId}/ccda:
    get:
      summary: Get a patient CCDA informtion by ID
      operationId: getPatientCcdaRecord
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: path
          name: patientId
          description: Id of the patient for which get information
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Array of information about patient's CCDA records'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PatientCcdaInformation"
  /{apivariant}/{practiceid}/providers:
    get:
      summary: Get a providers
      operationId: getProviders
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: query
          name: name
          description: Id of the patient for which get information
          schema:
            type: string
        - in: query
          name: providertype
          description: The provider type to filter the results on. Valid provider type values can be found by using GET /reference/providertypes.
          schema:
            type: string
        - in: query
          name: showallproviderids
          description: >
            In athenaNet's internal data structures, a single provider can be represented by multiple IDs.
            These IDs are used in certain external messages (e.g. HL7) and thus these IDs may need to be known by the API user as well.
            When set to true, a list of all of these ancillary IDs will be provided.
          schema:
            type: boolean
        - in: query
          name: showusualdepartmentguessthreshold
          description: >
            There are situations where determining where a provider "normally" practices is desired.
            Unfortuantely, there is no such concept in athenaNet since providers often practice in multiple locations.
            However, we can use some intelligence to determine this by looking back over the previous few months (90 days) to see actual practice.
            To enable this, set this value between 0 and 1; it is highly recommended to be at least .5.
            This is the ratio of appointments in a given department to the total number of appointments for that provider.
            A value of .5 means "the provider's appointments are 50% in the department guessed." Setting this to 1 would only return a department if ALL of the provider's appointments were in one department.
          schema:
            type: integer
      responses:
        '200':
          description: Array of information about providers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvidersInformationList"
    post:
      summary: Create new provider
      operationId: createProvider
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
      requestBody:
        required: true
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              required:
                - billable
                - entitytypeid
                - medicalgroupid
                - providergroupid
                - schedulingname
                - signatureonfileflag
              properties:
                alternatephone:
                  description: The phone number of the provider.	
                  type: string
                ansicode:
                  description: The provider taxonomy code of the provider.	
                  type: string
                billable:
                  description: This provider is a supervising provider and is credentialed to bill for services.	
                  type: boolean
                billednamecase:
                  description: The billing name of the provider.
                  type: string
                communicatordisplayname:
                  description: The communicator display name for the provider.
                  type: string
                communicatorhomedepartment:
                  description: The communicator home department for the provider.	
                  type: integer
                crdreferring:
                  description: This provider is a Coordinator referring provider.
                  type: boolean
                createencounteroncheckin:
                  description: Automatically create encounters at check-in.
                  type: boolean
                directaddress:
                  description: The direct email address for the provider.
                  type: string
                entitytypeid:
                  description: The entity type of provider. 1 = person, 2 = non-person
                  type: integer
                firstname:
                  description: The first name of the provider.
                  type: string
                hideinportal:
                  description: Hide this provider in the Patient Portal.
                  type: boolean
                lastname:
                  description: The last name of the provider.
                  type: string
                medicalgroupid:
                  description: The medical group of the provider.
                  type: integer
                middleinitial:
                  description: The middle name of the provider.
                  type: string
                namesuffix:
                  description: The suffix of the provider.
                  type: string
                ndctatnumber:
                  description: The NDC TAT number for this provider.
                  type: string
                npinumber:
                  description: The NPI of the provider.
                  type: integer
                practiceroleid:
                  description: The practice role ID for the provider.
                  type: integer
                providergroupid:
                  description: The provider group of the provider.
                  type: integer
                providerprofileid:
                  description: The provider profile of the provider (integer or 'NEW')
                  type: string
                providertype:
                  description: >
                    The abbreviation for the provider type of the provider. (e.g., MD, NP).
                    See GET /reference/providertypes for a mapping of abbreviation to provider type.	
                  type: string
                reportingname:
                  description: The reporting name for the provider.
                  type: string
                scheduleresourcetypeid:
                  description: The scheduling resource type id of the provider.
                  type: integer
                schedulingname:
                  description: The scheduling name of the provider.	
                  type: string
                schedulingnote:
                  description: The scheduling note for the provider.
                  type: string
                sex:
                  description: The sex of the provider (M or F)
                  type: string
                signatureonfileflag:
                  description: This provider's signature is on file.
                  type: boolean
                specialtyid:
                  description: The specialty ID of the provider. See GET /reference/providerspecialties for a mapping of ID to specialty name.
                  type: string
                ssn:
                  description: The SSN of the provider.
                  type: integer
                staffbucket:
                  description: Create a staff bucket for this provider.
                  type: boolean
                supervisingproviderid:
                  description: The supervising provider ID for this provider.
                  type: integer
                supervisingprovidertype:
                  description: If set to self,set supervisingprovider to itself.
                  type: string
                trackmissingslips:
                  description: This provider renders services that should be tracked on the Missing Slips Worklist.
                  type: boolean
                username:
                  description: The username for the provider.
                  type: string
      responses:
        '200':
          description: Array of information about created providers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProviderCreatedResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/appointments/{appointmentId}:
    get:
      summary: Get Information about a single patient's appointment by id
      operationId: getAppointmentById
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: path
          name: appointmentId
          description: Id of the appointment.
          schema:
            type: integer
          required: true
        - in: query
          name: ignorerestrictions
          description: >
            When showing patient detail for appointments, the patient information for patients with record restrictions and blocked patients will not be shown.
            Setting this flag to true will show that information for those patients.
          schema:
            type: boolean
        - in: query
          name: showclaimdetail
          description: >
            Include claim information, if available, associated with an appointment.
          schema:
            type: boolean
        - in: query
          name: showcopay
          description: >
            By default, the expected co-pay is returned.
            For performance purposes, you can set this to false and copay will not be populated.
          schema:
            type: boolean
        - in: query
          name: showexpectedprocedurecodes
          description: Show the expetcted procedurecodes.
          schema:
            type: boolean
        - in: query
          name: showinsurance
          description: >
            Include patient insurance information.
            Shows insurance packages for the appointment if any are selected, and all patient packages otherwise.
          schema:
            type: boolean
        - in: query
          name: showpatientdetail
          description: Include patient information for each patient associated with an appointment.
          schema:
            type: boolean
      responses:
        '200':
          description: Array of information about appointments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentInformationArray"
    put:
      summary: Set Information about a single patient's appointment by id
      operationId: bookAppointmentById
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: path
          name: appointmentId
          description: Id of the appointment.
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              required:
                - patientid
              properties:
                patientid:
                  description: The athenaNet patient ID.
                  type: integer
                appointmenttypeid:
                  description: >
                    The appointment type to be booked.
                    This field should never be used for booking appointments for web-based scheduling.
                    The use of this field is reserved for digital check-in (aka "kiosk") or an application used by practice staff.
                    One of this or reasonid is required.
                  type: integer
                bookingnote:
                  description: A note from the patient about why this appointment is being booked
                  type: string
                departmentid:
                  description: The athenaNet department ID.
                  type: integer
                donotsendconfirmationemail:
                  description: >
                    For clients with athenaCommunicator, certain appointment types can be configured to have an appointment confirmation email sent to the patient at time of appointment booking.
                    If this parameter is set to true, that email will not be sent.
                    This should only be used if you plan on sending a confirmation email via another method.
                  type: boolean
                ignoreschedulablepermission:
                  description: >
                    By default, we allow booking of appointments marked as schedulable via the web.
                    This flag allows you to bypass that restriction for booking.
                  type: boolean
                #insuranceinfo:
                #  description: >
                #    Patient insurance information, which will be added to the note on the appointment.
                #  type: string
                insurancecompany:
                  description: The name of the insurance company.
                  type: string
                insurancegroupid:
                  description: If available, any identifier for the insurance group.
                  type: string
                insuranceidnumber:
                  description: The insurance identifier for this individual patient.
                  type: string
                insurancenote:
                  description: Any extra information provided by the patient about insurance coverage.
                  type: string
                insurancephone:
                  description: The phone number for the insurance company.
                  type: string
                insuranceplanname:
                  description: The insurance plan name (e.g. "HMO Blue").
                  type: string
                insurancepolicyholder:
                  description: The full name of the insurance policy holder.
                  type: string
                nopatientcase:
                  description: >
                    By default, we create a patient case upon booking an appointment for new patients. Setting this to true bypasses that patient case.
                  type: boolean
                reasonid:
                  description: >
                    The appointment reason ID to be booked.
                    This field is required for booking appointments for web-based scheduling and is a reason that is retrieved from the /patientappointmentreasons call.
                  type: integer
                urgentyn:
                  description: Set this field in order to set the urgent flag in athena (if the practice settings allow for this).
                  type: boolean
      responses:
        '200':
          description: Array of information about appointments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentInformationArray"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete information about a single patient's appointment by id. Only open appointments can be deleted.
      operationId: deleteAppointmentById
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: path
          name: appointmentId
          description: Id of the appointment.
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Array of information about appointments which was affected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentInformationIds"
  /{apivariant}/{practiceid}/appointments/{appointmentId}/cancel:
    put:
      summary: Cancel an existing appointment.
      operationId: cancelAppointmentById
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: path
          name: appointmentId
          description: Id of the appointment.
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              required:
                - patientid
              properties:
                patientid:
                  description: The athenaNet patient ID.
                  type: integer
                appointmentcancelreasonid:
                  description: >
                    Passing in this parameter will override the default cancel reason.
                    Valid reasons can be retrieved via a call to the GET /appointmentcancelreasons endpoint.
                  type: integer
                cancellationreason:
                  description: A text explanation why the appointment is being cancelled
                  type: string
                departmentid:
                  description: The athenaNet department ID.
                  type: integer
                ignoreschedulablepermission:
                  description: >
                    By default, we allow booking of appointments marked as schedulable via the web.
                    This flag allows you to bypass that restriction for booking.
                  type: boolean
                nopatientcase:
                  description: >
                    By default, we create a patient case upon booking an appointment for new patients. Setting this to true bypasses that patient case.
                  type: boolean
      responses:
        '200':
          description: Result of operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatusData"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/appointments/booked:
    get:
      summary: Get booked appointments
      operationId: getBookedAppointments
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: query
          name: appointmentstatus
          description: Filter appointments by status.
          schema:
            type: string
        - in: query
          name: appointmenttypeid
          description: Filter by appointment type ID.
          schema:
            type: integer
        - in: query
          name: departmentid
          description: The athenaNet department ID.
          schema:
            type: integer
        - in: query
          name: enddate
          description: End of the appointment search date range (mm/dd/yyyy). Inclusive.
          schema:
            type: string
        - in: query
          name: endlastmodified
          description: >
            Identify appointments modified prior to this date/time (mm/dd/yyyy hh:mi:ss). Inclusive.
            Note: This can only be used if a startlastmodified value is supplied as well.
          schema:
            type: string
        - in: query
          name: ignorerestrictions
          description: >
            When showing patient detail for appointments, the patient information for patients with record restrictions and blocked patients will not be shown.
            Setting this flag to true will show that information for those patients.
          schema:
            type: boolean
        - in: query
          name: patientid
          description: >
            The athenaNet patient ID.
            If operating in a Provider Group Enterprise practice, this should be the enterprise patient ID.
          schema:
            type: integer
        - in: query
          name: providerid
          description: The athenaNet provider ID. Multiple IDs (either as a comma delimited list or multiple POSTed values) are allowed.
          schema:
            type: string
        - in: query
          name: scheduledenddate
          description: End of the appointment scheduled search date range (mm/dd/yyyy). Inclusive.
          schema:
            type: string
        - in: query
          name: scheduledstartdate
          description: Start of the appointment scheduled search date range (mm/dd/yyyy). Inclusive.
          schema:
            type: string
        - in: query
          name: showcancelled
          description: Include appointments that have been cancelled.
          schema:
            type: boolean
        - in: query
          name: showclaimdetail
          description: >
            Include claim information, if available, associated with an appointment.
          schema:
            type: boolean
        - in: query
          name: showcopay
          description: >
            By default, the expected co-pay is returned.
            For performance purposes, you can set this to false and copay will not be populated.
          schema:
            type: boolean
        - in: query
          name: showexpectedprocedurecodes
          description: Show the expetcted procedurecodes.
          schema:
            type: boolean
        - in: query
          name: showinsurance
          description: >
            Include patient insurance information.
            Shows insurance packages for the appointment if any are selected, and all patient packages otherwise.
          schema:
            type: boolean
        - in: query
          name: showpatientdetail
          description: Include patient information for each patient associated with an appointment.
          schema:
            type: boolean
        - in: query
          name: showremindercalldetail
          description: >
            Include all remindercall related results, if available, associated with an appointment.
          schema:
            type: boolean
        - in: query
          name: startdate
          description: Start of the appointment search date range (mm/dd/yyyy). Inclusive.
          schema:
            type: string
        - in: query
          name: startlastmodified
          description: Identify appointments modified after this date/time (mm/dd/yyyy hh:mi:ss). Inclusive.	
          schema:
            type: string
      responses:
        '200':
          description: Array of information about appointments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentInformationList"
  /{apivariant}/{practiceid}/appointments/open:
    get:
      summary: Get open appointment slots
      operationId: getOpenAppointments
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: query
          name: appointmenttypeid
          description: >
            Normally, an appointment reason ID should be used which will map to the correct underlying appointment type in athenaNet.
            This field will ignore the practice's existing setup for what should be scheduled.
            Please consult with athenahealth before using.
            Either an appointmenttypeid or a reasonid must be specified or no results will be returned.
          schema:
            type: integer
        - in: query
          name: bypassscheduletimechecks
          description: >
            Bypass checks that usually require returned appointments to be some amount of hours in the future
            (as configured by the practice, defaulting to 24 hours), and also ignores the setting that only 
            shows appointments for a certain number of days in the future (also configurable by the practice, defaulting to 90 days).
          schema:
            type: boolean
        - in: query
          name: departmentid
          description: The athenaNet department ID.	
          schema:
            type: integer
        - in: query
          name: enddate
          description: End of the appointment search date range (mm/dd/yyyy). Inclusive. Defaults to seven days from startdate.	
          schema:
            type: string
        - in: query
          name: ignoreschedulablepermission
          description: >
            By default, we show only appointments that are are available to scheduled via the API.
            This flag allows you to bypass that restriction for viewing available appointments (but you still may not be able to schedule based on this permission!).
            This flag does not, however, show the full schedule (that is, appointments that are already booked).	
          schema:
            type: boolean
        - in: query
          name: providerid
          description: The athenaNet provider ID. Required if a reasonid other than -1 is specified.	
          schema:
            type: string
        - in: query
          name: reasonid
          description: >
            The athenaNet patient appointment reason ID, from GET /patientappointmentreasons.
            While this is not technically required due to some unusual use cases, it is highly recommended for most calls.
            We do allow a special value of -1 for the reasonid.
            This reasonid will return open, web-schedulable slots regardless of reason.
            However, slots returned using a search of -1 may return slots that are not bookable by any reason ID (they may be bookable by specific appointment type IDs instead).
            This argument allows multiple valid reason IDs to be specified (e.g. reasonid=1,2,3), so if you are looking for slots that match "any" reason, it is recommended that you enumerate the set of reasons you are looking for.
            Either a reasonid or an appointmenttypeid must be specified or no results will be returned.
            If a reasonid other than -1 is specified then a providerid must also be specified.
          schema:
            type: string
        - in: query
          name: showfrozenslots
          description: >
            By default, we hide appointments that are frozen from being returned via the API. 
            This flag allows you to show frozen slots in the set of results returned.
          schema:
            type: boolean
        - in: query
          name: startdate
          description: Start of the appointment search date range (mm/dd/yyyy). Inclusive. Defaults to today.	
          schema:
            type: string
      responses:
        '200':
          description: Array of information about appointments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentInformationList"
    post:
      summary: Provides the ability to add new open appointment slots
      operationId: openNewAppointment
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
      requestBody:
        required: true
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              required:
                - appointmentdate
                - appointmenttime
                - departmentid
                - providerid
              properties:
                appointmentdate:
                  description: The appointment date for the new open appointment slot (mm/dd/yyyy).	
                  type: string
                appointmenttime:
                  description: >
                    The time (hh24:mi) for the new appointment slot.
                    Multiple times (either as a comma delimited list or multiple POSTed values) are allowed. 24 hour time.	
                  type: string
                appointmenttypeid:
                  description: The appointment type ID to be created. Either this or a reason must be provided.	
                  type: integer
                departmentid:
                  description: The athenaNet department ID.	
                  type: integer
                providerid:
                  description: The athenaNet provider ID.
                  type: integer
                reasonid:
                  description: >
                    The appointment reason (/patientappointmentreasons) to be created.
                    Either this or a raw appointment type ID must be provided.
                  type: integer
      responses:
        '200':
          description: Array of information about created providers
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointmentids:
                    type: object
                    additionalProperties:
                      type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/appointmenttypes:
    get:
      summary: Get appointment types
      operationId: getAppointmentTypes
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - in: query
          name: hidegeneric
          description: By default, we show both generic and non-generic types. Setting this to true will hide the generic types (and show only non-generic types).
          schema:
            type: boolean
        - in: query
          name: hidenongeneric
          description: By default, we show both generic and non-generic types. Setting this to true will hide non-generic types (and show only generic types).
          schema:
            type: boolean
        - in: query
          name: hidenonpatient
          description: This defaults to true if not specified, and thus will hide non-patient facing types. Setting this to false would thus show non-patient facing types.
          schema:
            type: boolean
        - in: query
          name: hidetemplatetypeonly
          description: By default, we show both "template only" and not-template only types. Setting this to true, the results will omit template only types. ("Template only" is a setting that makes the type appear in schedules, but forces users to select a non-template type upon booking.)
          schema:
            type: boolean
      responses:
        '200':
          description: Array of information about appointment types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentTypeInformationList"
    post:
      summary: Creates new appointment type
      operationId: createAppointmentType
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
      requestBody:
        required: true
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              required:
                - name
                - shortname
                - patient
                - duration
              properties:
                duration:
                  description: >
                    The expected duration, in minutes, of the appointment type.
                    Note, this value cannot be changed after creation, so please choose carefully.
                  type: integer
                generic:
                  description: >
                    If set to true, this type serves as a "generic" type, that will match any type when searching.
                    Defaults to false.
                  type: boolean
                name:
                  description: The name of the appointment type. Maximum length of 30 characters.
                  type: string
                  maxLength: 30
                patient:
                  description: >
                    If set to true, this type serves as a "patient" type, meaning that is is a type that can be used for booking patients.
                    If set to false, then it this type will not be used for patient (e.g. "Lunch" or "Vacation").
                    Non-patient types are mostly used to reserving time for providers to not see patients.
                  type: boolean
                shortname :
                  description: >
                    The short name code of the appointment type.
                    Maximum length of 4 characters.
                    Used for making schedule templates.
                    Note, this value cannot be changed after creation, so please choose carefully.
                  type: string
                  maxLength: 4
                templatetypeonly:
                  description: >
                    If set to true, this type serves as a "template-only" type, meaning that it can be used for building schedule templates, 
                    but cannot be used for booking appointments (i.e. another type must be chosen).
                    Defaults to false.
                  type: boolean
      responses:
        '200':
          description: Array of information about created providers
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointmenttypeid:
                    type: integer
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /{apivariant}/{practiceid}/chart/{patientId}/medications:
    get:
      summary: Get patient medications
      operationId: getPatientMedications
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: patientId
          in: path
          description: Id of the patient for which get medications
          required: true
          schema:
            type: integer
            format: int32
        - name: departmentid
          in: query
          description: The athenanet department ID	
          required: true
          schema:
            type: integer
            format: int32
        - name: medicationtype
          in: query
          description: Historical or Active or Denied. Will return a list of a patient's active or historical or denied medications.	
          schema:
            type: string
        - name: showndc
          in: query
          description: Shows the list of NDC numbers related to the medication.	
          schema:
            type: boolean
        - name: showpend
          in: query
          description: Include pending medications associated with approved future orders. These medications have not yet been submitted.	
          schema:
            type: boolean
        - name: showrxnorm
          in: query
          description: Shows the list of RxNorm Identifiers related to the medication. The list may contain both branded and generic identifiers.	
          schema:
            type: boolean
      responses:
        '200':
          description: Information about patient medications
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PatientMedicationInformation"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/chart/{patientId}/medicalhistory:
    get:
      summary: Get patient medical history
      operationId: getPatientMedicalHistory
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: patientId
          in: path
          description: Id of the patient for which get medications
          required: true
          schema:
            type: integer
            format: int32
        - name: departmentid
          in: query
          description: The athenanet department ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Information about patient medications
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PatientMedicalHistory"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/chart/{patientId}/analytes:
    get:
      summary: Get patient medical history
      operationId: getPatientAnalytes
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: patientId
          in: path
          description: Id of the patient for which get medications
          required: true
          schema:
            type: integer
            format: int32
        - name: departmentid
          in: query
          description: The athenanet department ID	
          required: true
          schema:
            type: integer
            format: int32
        - name: allresultsbyencounterid
          in: query
          description: ID used to return lab results for a specific encounter.
          schema:
            type: integer
        - name: analyteresultstatus
          in: query
          description: >
            Filter the results based on the analyte's result status.
            Since the result status is a free text field, this list is not exhaustive, but does represent a majority of the used statuses.
          schema:
            type: string
        - name: enddate
          in: query
          description: >
            Filter lab orders not individual results that are on or before this date.
            Example: enddate=1/21/2018.
            If no enddate is specified, all lab orders found since startdate will be included if specified.
          schema:
            type: string
        - name: labresultstatus
          in: query
          description: >
            Filter the results based on the lab result's result status.
            Since the result status is a free text field, this list is not exhaustive, but does represent a majority of the used statuses.
          schema:
            type: string
        - name: showabnormaldetails
          in: query
          description: Include the translation of the abnormalflag into HL7 code standards.
          schema:
            type: boolean
        - name: showhidden
          in: query
          description: >
            Includes the lab results and analytes marked as hidden.
            Hidden lab results and analytes are created when they are manually entered, for example on the qm tab or in flowsheets.
          schema:
            type: boolean
        - name: showtemplate
          in: query
          description: If true, interpretation template added to the document is also returned.
          schema:
            type: boolean
        - name: startdate
          in: query
          description: >
            Filter lab orders not individual results that are on or after this date.
            Example: startdate=6/21/2015.
            If no startdate is specified, all prior lab orders will be included until enddate if specified.
          schema:
            type: string
      responses:
        '200':
          description: Information about patient medications
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalytesList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/chart/{patientId}/labresults:
    get:
      summary: Get patient medical history
      operationId: getPatientLabResults
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: patientId
          in: path
          description: Id of the patient for which get medications
          required: true
          schema:
            type: integer
            format: int32
        - name: departmentid
          in: query
          description: The athenanet department ID	
          required: true
          schema:
            type: integer
            format: int32
        - name: allresultsbyencounterid
          in: query
          description: ID used to return lab results for a specific encounter.
          schema:
            type: integer
        - name: analyteresultstatus
          in: query
          description: >
            Filter the results based on the analyte's result status.
            Since the result status is a free text field, this list is not exhaustive, but does represent a majority of the used statuses.
          schema:
            type: string
        - name: enddate
          in: query
          description: >
            Filter lab orders not individual results that are on or before this date.
            Example: enddate=1/21/2018.
            If no enddate is specified, all lab orders found since startdate will be included if specified.
          schema:
            type: string
        - name: labresultstatus
          in: query
          description: >
            Filter the results based on the lab result's result status.
            Since the result status is a free text field, this list is not exhaustive, but does represent a majority of the used statuses.
          schema:
            type: string
        - name: showabnormaldetails
          in: query
          description: Include the translation of the abnormalflag into HL7 code standards.
          schema:
            type: boolean
        - name: showhidden
          in: query
          description: >
            Includes the lab results and analytes marked as hidden.
            Hidden lab results and analytes are created when they are manually entered, for example on the qm tab or in flowsheets.
          schema:
            type: boolean
        - name: showtemplate
          in: query
          description: If true, interpretation template added to the document is also returned.
          schema:
            type: boolean
        - name: startdate
          in: query
          description: >
            Filter lab orders not individual results that are on or after this date.
            Example: startdate=6/21/2015.
            If no startdate is specified, all prior lab orders will be included until enddate if specified.
          schema:
            type: string
      responses:
        '200':
          description: Information about patient medications
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LabResultList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/chart/{patientId}/vitals:
    get:
      summary: Get patient medical history
      operationId: getPatientVitals
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: patientId
          in: path
          description: Id of the patient for which get medications
          required: true
          schema:
            type: integer
            format: int32
        - name: departmentid
          in: query
          description: >
            The department for this patient.
            A patient may have multiple charts, and the department determines which chart to retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: enddate
          in: query
          description: >
            Only retrieve vitals that were taking on or before this date
          schema:
            type: string
        - name: showemptyvitals
          in: query
          description: Show configured vitals that have no readings for this patient.
          schema:
            type: boolean
        - name: startdate
          in: query
          description: >
            Only retrieve vitals that were taking on or after this date
          schema:
            type: string
      responses:
        '200':
          description: Information about patient medications
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VitalsList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/chart/{patientId}/encounters:
    get:
      summary: Get encounters for the speicic patient.
      operationId: getPatientEncounters
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: patientId
          in: path
          description: Id of the patient for which get medications
          required: true
          schema:
            type: integer
            format: int32
        - name: departmentid
          in: query
          description: >
            The department for this patient.
            A patient may have multiple charts, and the department determines which chart to retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: appointmentid
          in: query
          description: Find the encounter for this appointment.
          schema:
            type: integer
            format: int32
        - name: providerid
          in: query
          description: The ID of the provider for this encounter
          schema:
            type: integer
            format: int32
        - name: enddate
          in: query
          description: Omit any encounters later than this date
          schema:
            type: string
        - name: startdate
          in: query
          description: Omit any encounters earlier than this date
          schema:
            type: string
        - name: showallstatuses
          in: query
          description: >
            By default only encounters in OPEN, CLOSED, or REVIEW status are retrieved, with this flag, encounters aren't filtered by status.
          schema:
            type: boolean
        - name: showallstatuses
          in: query
          description: Retrieve all encounter types, by default only VISIT and ORDERSONLY are retrieved.
          schema:
            type: boolean
        - name: showallstatuses
          in: query
          description: Query diagnosis information for every encounter
          schema:
            type: boolean
      responses:
        '200':
          description: Information about patient encounters
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EncountersList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{apivariant}/{practiceid}/chart/encounter/{encounterid}/orders:
    get:
      summary: Get encounters for the speicic patient.
      operationId: getPatientEncounters
      parameters:
        - $ref: "#/components/parameters/practiceid"
        - $ref: "#/components/parameters/apivariant"
        - name: encounterid
          in: path
          description: The encounter ID.
          required: true
          schema:
            type: integer
            format: int32
        - name: allowdischargetype
          in: query
          description: If set, this will allow getting orders for a discharge encounter type.
          schema:
            type: boolean
        - name: showclinicalprovider
          in: query
          description: If set, this will show the information about the provider receiving the order.
          schema:
            type: boolean
        - name: showdeclinedorders
          in: query
          description: If set, include orders that were declined
          schema:
            type: boolean
        - name: showexternalcodes
          in: query
          description: >
            If set, translate the order information to relevant external vocabularies, where available.
            Examples are medictions to RxNorm and NDC, vaccines to CVX and MVX, labs to LOINC, etc.
            Our mappings are not exhaustive.
          schema:
            type: boolean
      responses:
        '200':
          description: >
            The list of orders for this encounter, broken down by diagnosis.
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EncounterDiagnosesList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"